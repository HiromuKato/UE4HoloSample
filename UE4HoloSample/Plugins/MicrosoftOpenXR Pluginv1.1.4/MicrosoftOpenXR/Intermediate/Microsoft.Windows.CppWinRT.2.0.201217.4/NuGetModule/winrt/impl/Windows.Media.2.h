// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Windows_Media_2_H
#define WINRT_Windows_Media_2_H
#include "winrt/impl/Windows.Foundation.2.h"
#include "winrt/impl/Windows.Graphics.DirectX.2.h"
#include "winrt/impl/Windows.Graphics.DirectX.Direct3D11.2.h"
#include "winrt/impl/Windows.Graphics.Imaging.2.h"
#include "winrt/impl/Windows.Media.1.h"
WINRT_EXPORT namespace winrt::Windows::Media
{
    struct MediaTimeRange
    {
        Windows::Foundation::TimeSpan Start;
        Windows::Foundation::TimeSpan End;
    };
    inline bool operator==(MediaTimeRange const& left, MediaTimeRange const& right) noexcept
    {
        return left.Start == right.Start && left.End == right.End;
    }
    inline bool operator!=(MediaTimeRange const& left, MediaTimeRange const& right) noexcept
    {
        return !(left == right);
    }
    struct __declspec(empty_bases) AudioBuffer : Windows::Media::IAudioBuffer
    {
        AudioBuffer(std::nullptr_t) noexcept {}
        AudioBuffer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IAudioBuffer(ptr, take_ownership_from_abi) {}
        AudioBuffer(AudioBuffer const&) noexcept = default;
        AudioBuffer(AudioBuffer&&) noexcept = default;
        AudioBuffer& operator=(AudioBuffer const&) & noexcept = default;
        AudioBuffer& operator=(AudioBuffer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AudioFrame : Windows::Media::IAudioFrame
    {
        AudioFrame(std::nullptr_t) noexcept {}
        AudioFrame(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IAudioFrame(ptr, take_ownership_from_abi) {}
        explicit AudioFrame(uint32_t capacity);
        AudioFrame(AudioFrame const&) noexcept = default;
        AudioFrame(AudioFrame&&) noexcept = default;
        AudioFrame& operator=(AudioFrame const&) & noexcept = default;
        AudioFrame& operator=(AudioFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AutoRepeatModeChangeRequestedEventArgs : Windows::Media::IAutoRepeatModeChangeRequestedEventArgs
    {
        AutoRepeatModeChangeRequestedEventArgs(std::nullptr_t) noexcept {}
        AutoRepeatModeChangeRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IAutoRepeatModeChangeRequestedEventArgs(ptr, take_ownership_from_abi) {}
        AutoRepeatModeChangeRequestedEventArgs(AutoRepeatModeChangeRequestedEventArgs const&) noexcept = default;
        AutoRepeatModeChangeRequestedEventArgs(AutoRepeatModeChangeRequestedEventArgs&&) noexcept = default;
        AutoRepeatModeChangeRequestedEventArgs& operator=(AutoRepeatModeChangeRequestedEventArgs const&) & noexcept = default;
        AutoRepeatModeChangeRequestedEventArgs& operator=(AutoRepeatModeChangeRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ImageDisplayProperties : Windows::Media::IImageDisplayProperties
    {
        ImageDisplayProperties(std::nullptr_t) noexcept {}
        ImageDisplayProperties(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IImageDisplayProperties(ptr, take_ownership_from_abi) {}
        ImageDisplayProperties(ImageDisplayProperties const&) noexcept = default;
        ImageDisplayProperties(ImageDisplayProperties&&) noexcept = default;
        ImageDisplayProperties& operator=(ImageDisplayProperties const&) & noexcept = default;
        ImageDisplayProperties& operator=(ImageDisplayProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaExtensionManager : Windows::Media::IMediaExtensionManager,
        impl::require<MediaExtensionManager, Windows::Media::IMediaExtensionManager2>
    {
        MediaExtensionManager(std::nullptr_t) noexcept {}
        MediaExtensionManager(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IMediaExtensionManager(ptr, take_ownership_from_abi) {}
        MediaExtensionManager();
        MediaExtensionManager(MediaExtensionManager const&) noexcept = default;
        MediaExtensionManager(MediaExtensionManager&&) noexcept = default;
        MediaExtensionManager& operator=(MediaExtensionManager const&) & noexcept = default;
        MediaExtensionManager& operator=(MediaExtensionManager&&) & noexcept = default;
    };
    struct MediaMarkerTypes
    {
        MediaMarkerTypes() = delete;
        [[nodiscard]] static auto Bookmark();
    };
    struct __declspec(empty_bases) MediaProcessingTriggerDetails : Windows::Media::IMediaProcessingTriggerDetails
    {
        MediaProcessingTriggerDetails(std::nullptr_t) noexcept {}
        MediaProcessingTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IMediaProcessingTriggerDetails(ptr, take_ownership_from_abi) {}
        MediaProcessingTriggerDetails(MediaProcessingTriggerDetails const&) noexcept = default;
        MediaProcessingTriggerDetails(MediaProcessingTriggerDetails&&) noexcept = default;
        MediaProcessingTriggerDetails& operator=(MediaProcessingTriggerDetails const&) & noexcept = default;
        MediaProcessingTriggerDetails& operator=(MediaProcessingTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaTimelineController : Windows::Media::IMediaTimelineController,
        impl::require<MediaTimelineController, Windows::Media::IMediaTimelineController2>
    {
        MediaTimelineController(std::nullptr_t) noexcept {}
        MediaTimelineController(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IMediaTimelineController(ptr, take_ownership_from_abi) {}
        MediaTimelineController();
        MediaTimelineController(MediaTimelineController const&) noexcept = default;
        MediaTimelineController(MediaTimelineController&&) noexcept = default;
        MediaTimelineController& operator=(MediaTimelineController const&) & noexcept = default;
        MediaTimelineController& operator=(MediaTimelineController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaTimelineControllerFailedEventArgs : Windows::Media::IMediaTimelineControllerFailedEventArgs
    {
        MediaTimelineControllerFailedEventArgs(std::nullptr_t) noexcept {}
        MediaTimelineControllerFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IMediaTimelineControllerFailedEventArgs(ptr, take_ownership_from_abi) {}
        MediaTimelineControllerFailedEventArgs(MediaTimelineControllerFailedEventArgs const&) noexcept = default;
        MediaTimelineControllerFailedEventArgs(MediaTimelineControllerFailedEventArgs&&) noexcept = default;
        MediaTimelineControllerFailedEventArgs& operator=(MediaTimelineControllerFailedEventArgs const&) & noexcept = default;
        MediaTimelineControllerFailedEventArgs& operator=(MediaTimelineControllerFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MusicDisplayProperties : Windows::Media::IMusicDisplayProperties,
        impl::require<MusicDisplayProperties, Windows::Media::IMusicDisplayProperties2, Windows::Media::IMusicDisplayProperties3>
    {
        MusicDisplayProperties(std::nullptr_t) noexcept {}
        MusicDisplayProperties(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IMusicDisplayProperties(ptr, take_ownership_from_abi) {}
        MusicDisplayProperties(MusicDisplayProperties const&) noexcept = default;
        MusicDisplayProperties(MusicDisplayProperties&&) noexcept = default;
        MusicDisplayProperties& operator=(MusicDisplayProperties const&) & noexcept = default;
        MusicDisplayProperties& operator=(MusicDisplayProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) PlaybackPositionChangeRequestedEventArgs : Windows::Media::IPlaybackPositionChangeRequestedEventArgs
    {
        PlaybackPositionChangeRequestedEventArgs(std::nullptr_t) noexcept {}
        PlaybackPositionChangeRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IPlaybackPositionChangeRequestedEventArgs(ptr, take_ownership_from_abi) {}
        PlaybackPositionChangeRequestedEventArgs(PlaybackPositionChangeRequestedEventArgs const&) noexcept = default;
        PlaybackPositionChangeRequestedEventArgs(PlaybackPositionChangeRequestedEventArgs&&) noexcept = default;
        PlaybackPositionChangeRequestedEventArgs& operator=(PlaybackPositionChangeRequestedEventArgs const&) & noexcept = default;
        PlaybackPositionChangeRequestedEventArgs& operator=(PlaybackPositionChangeRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) PlaybackRateChangeRequestedEventArgs : Windows::Media::IPlaybackRateChangeRequestedEventArgs
    {
        PlaybackRateChangeRequestedEventArgs(std::nullptr_t) noexcept {}
        PlaybackRateChangeRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IPlaybackRateChangeRequestedEventArgs(ptr, take_ownership_from_abi) {}
        PlaybackRateChangeRequestedEventArgs(PlaybackRateChangeRequestedEventArgs const&) noexcept = default;
        PlaybackRateChangeRequestedEventArgs(PlaybackRateChangeRequestedEventArgs&&) noexcept = default;
        PlaybackRateChangeRequestedEventArgs& operator=(PlaybackRateChangeRequestedEventArgs const&) & noexcept = default;
        PlaybackRateChangeRequestedEventArgs& operator=(PlaybackRateChangeRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ShuffleEnabledChangeRequestedEventArgs : Windows::Media::IShuffleEnabledChangeRequestedEventArgs
    {
        ShuffleEnabledChangeRequestedEventArgs(std::nullptr_t) noexcept {}
        ShuffleEnabledChangeRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IShuffleEnabledChangeRequestedEventArgs(ptr, take_ownership_from_abi) {}
        ShuffleEnabledChangeRequestedEventArgs(ShuffleEnabledChangeRequestedEventArgs const&) noexcept = default;
        ShuffleEnabledChangeRequestedEventArgs(ShuffleEnabledChangeRequestedEventArgs&&) noexcept = default;
        ShuffleEnabledChangeRequestedEventArgs& operator=(ShuffleEnabledChangeRequestedEventArgs const&) & noexcept = default;
        ShuffleEnabledChangeRequestedEventArgs& operator=(ShuffleEnabledChangeRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) SystemMediaTransportControls : Windows::Media::ISystemMediaTransportControls,
        impl::require<SystemMediaTransportControls, Windows::Media::ISystemMediaTransportControls2>
    {
        SystemMediaTransportControls(std::nullptr_t) noexcept {}
        SystemMediaTransportControls(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::ISystemMediaTransportControls(ptr, take_ownership_from_abi) {}
        SystemMediaTransportControls(SystemMediaTransportControls const&) noexcept = default;
        SystemMediaTransportControls(SystemMediaTransportControls&&) noexcept = default;
        SystemMediaTransportControls& operator=(SystemMediaTransportControls const&) & noexcept = default;
        SystemMediaTransportControls& operator=(SystemMediaTransportControls&&) & noexcept = default;
        static auto GetForCurrentView();
    };
    struct __declspec(empty_bases) SystemMediaTransportControlsButtonPressedEventArgs : Windows::Media::ISystemMediaTransportControlsButtonPressedEventArgs
    {
        SystemMediaTransportControlsButtonPressedEventArgs(std::nullptr_t) noexcept {}
        SystemMediaTransportControlsButtonPressedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::ISystemMediaTransportControlsButtonPressedEventArgs(ptr, take_ownership_from_abi) {}
        SystemMediaTransportControlsButtonPressedEventArgs(SystemMediaTransportControlsButtonPressedEventArgs const&) noexcept = default;
        SystemMediaTransportControlsButtonPressedEventArgs(SystemMediaTransportControlsButtonPressedEventArgs&&) noexcept = default;
        SystemMediaTransportControlsButtonPressedEventArgs& operator=(SystemMediaTransportControlsButtonPressedEventArgs const&) & noexcept = default;
        SystemMediaTransportControlsButtonPressedEventArgs& operator=(SystemMediaTransportControlsButtonPressedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) SystemMediaTransportControlsDisplayUpdater : Windows::Media::ISystemMediaTransportControlsDisplayUpdater
    {
        SystemMediaTransportControlsDisplayUpdater(std::nullptr_t) noexcept {}
        SystemMediaTransportControlsDisplayUpdater(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::ISystemMediaTransportControlsDisplayUpdater(ptr, take_ownership_from_abi) {}
        SystemMediaTransportControlsDisplayUpdater(SystemMediaTransportControlsDisplayUpdater const&) noexcept = default;
        SystemMediaTransportControlsDisplayUpdater(SystemMediaTransportControlsDisplayUpdater&&) noexcept = default;
        SystemMediaTransportControlsDisplayUpdater& operator=(SystemMediaTransportControlsDisplayUpdater const&) & noexcept = default;
        SystemMediaTransportControlsDisplayUpdater& operator=(SystemMediaTransportControlsDisplayUpdater&&) & noexcept = default;
    };
    struct __declspec(empty_bases) SystemMediaTransportControlsPropertyChangedEventArgs : Windows::Media::ISystemMediaTransportControlsPropertyChangedEventArgs
    {
        SystemMediaTransportControlsPropertyChangedEventArgs(std::nullptr_t) noexcept {}
        SystemMediaTransportControlsPropertyChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::ISystemMediaTransportControlsPropertyChangedEventArgs(ptr, take_ownership_from_abi) {}
        SystemMediaTransportControlsPropertyChangedEventArgs(SystemMediaTransportControlsPropertyChangedEventArgs const&) noexcept = default;
        SystemMediaTransportControlsPropertyChangedEventArgs(SystemMediaTransportControlsPropertyChangedEventArgs&&) noexcept = default;
        SystemMediaTransportControlsPropertyChangedEventArgs& operator=(SystemMediaTransportControlsPropertyChangedEventArgs const&) & noexcept = default;
        SystemMediaTransportControlsPropertyChangedEventArgs& operator=(SystemMediaTransportControlsPropertyChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) SystemMediaTransportControlsTimelineProperties : Windows::Media::ISystemMediaTransportControlsTimelineProperties
    {
        SystemMediaTransportControlsTimelineProperties(std::nullptr_t) noexcept {}
        SystemMediaTransportControlsTimelineProperties(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::ISystemMediaTransportControlsTimelineProperties(ptr, take_ownership_from_abi) {}
        SystemMediaTransportControlsTimelineProperties();
        SystemMediaTransportControlsTimelineProperties(SystemMediaTransportControlsTimelineProperties const&) noexcept = default;
        SystemMediaTransportControlsTimelineProperties(SystemMediaTransportControlsTimelineProperties&&) noexcept = default;
        SystemMediaTransportControlsTimelineProperties& operator=(SystemMediaTransportControlsTimelineProperties const&) & noexcept = default;
        SystemMediaTransportControlsTimelineProperties& operator=(SystemMediaTransportControlsTimelineProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VideoDisplayProperties : Windows::Media::IVideoDisplayProperties,
        impl::require<VideoDisplayProperties, Windows::Media::IVideoDisplayProperties2>
    {
        VideoDisplayProperties(std::nullptr_t) noexcept {}
        VideoDisplayProperties(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IVideoDisplayProperties(ptr, take_ownership_from_abi) {}
        VideoDisplayProperties(VideoDisplayProperties const&) noexcept = default;
        VideoDisplayProperties(VideoDisplayProperties&&) noexcept = default;
        VideoDisplayProperties& operator=(VideoDisplayProperties const&) & noexcept = default;
        VideoDisplayProperties& operator=(VideoDisplayProperties&&) & noexcept = default;
    };
    struct VideoEffects
    {
        VideoEffects() = delete;
        [[nodiscard]] static auto VideoStabilization();
    };
    struct __declspec(empty_bases) VideoFrame : Windows::Media::IVideoFrame,
        impl::require<VideoFrame, Windows::Media::IVideoFrame2>
    {
        VideoFrame(std::nullptr_t) noexcept {}
        VideoFrame(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Media::IVideoFrame(ptr, take_ownership_from_abi) {}
        VideoFrame(Windows::Graphics::Imaging::BitmapPixelFormat const& format, int32_t width, int32_t height);
        VideoFrame(Windows::Graphics::Imaging::BitmapPixelFormat const& format, int32_t width, int32_t height, Windows::Graphics::Imaging::BitmapAlphaMode const& alpha);
        VideoFrame(VideoFrame const&) noexcept = default;
        VideoFrame(VideoFrame&&) noexcept = default;
        VideoFrame& operator=(VideoFrame const&) & noexcept = default;
        VideoFrame& operator=(VideoFrame&&) & noexcept = default;
        using Windows::Media::IVideoFrame::CopyToAsync;
        using impl::consume_t<VideoFrame, Windows::Media::IVideoFrame2>::CopyToAsync;
        static auto CreateAsDirect3D11SurfaceBacked(Windows::Graphics::DirectX::DirectXPixelFormat const& format, int32_t width, int32_t height);
        static auto CreateAsDirect3D11SurfaceBacked(Windows::Graphics::DirectX::DirectXPixelFormat const& format, int32_t width, int32_t height, Windows::Graphics::DirectX::Direct3D11::IDirect3DDevice const& device);
        static auto CreateWithSoftwareBitmap(Windows::Graphics::Imaging::SoftwareBitmap const& bitmap);
        static auto CreateWithDirect3D11Surface(Windows::Graphics::DirectX::Direct3D11::IDirect3DSurface const& surface);
    };
}
#endif
