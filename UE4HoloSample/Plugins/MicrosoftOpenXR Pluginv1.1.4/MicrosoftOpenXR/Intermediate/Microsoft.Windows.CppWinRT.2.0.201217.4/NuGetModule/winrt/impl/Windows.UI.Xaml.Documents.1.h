// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Windows_UI_Xaml_Documents_1_H
#define WINRT_Windows_UI_Xaml_Documents_1_H
#include "winrt/impl/Windows.UI.Xaml.Documents.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Documents
{
    struct __declspec(empty_bases) IBlock :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBlock>
    {
        IBlock(std::nullptr_t = nullptr) noexcept {}
        IBlock(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBlock(IBlock const&) noexcept = default;
        IBlock(IBlock&&) noexcept = default;
        IBlock& operator=(IBlock const&) & noexcept = default;
        IBlock& operator=(IBlock&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBlock2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBlock2>
    {
        IBlock2(std::nullptr_t = nullptr) noexcept {}
        IBlock2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBlock2(IBlock2 const&) noexcept = default;
        IBlock2(IBlock2&&) noexcept = default;
        IBlock2& operator=(IBlock2 const&) & noexcept = default;
        IBlock2& operator=(IBlock2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBlockFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBlockFactory>
    {
        IBlockFactory(std::nullptr_t = nullptr) noexcept {}
        IBlockFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBlockFactory(IBlockFactory const&) noexcept = default;
        IBlockFactory(IBlockFactory&&) noexcept = default;
        IBlockFactory& operator=(IBlockFactory const&) & noexcept = default;
        IBlockFactory& operator=(IBlockFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBlockStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBlockStatics>
    {
        IBlockStatics(std::nullptr_t = nullptr) noexcept {}
        IBlockStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBlockStatics(IBlockStatics const&) noexcept = default;
        IBlockStatics(IBlockStatics&&) noexcept = default;
        IBlockStatics& operator=(IBlockStatics const&) & noexcept = default;
        IBlockStatics& operator=(IBlockStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBlockStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBlockStatics2>
    {
        IBlockStatics2(std::nullptr_t = nullptr) noexcept {}
        IBlockStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBlockStatics2(IBlockStatics2 const&) noexcept = default;
        IBlockStatics2(IBlockStatics2&&) noexcept = default;
        IBlockStatics2& operator=(IBlockStatics2 const&) & noexcept = default;
        IBlockStatics2& operator=(IBlockStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBold :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBold>
    {
        IBold(std::nullptr_t = nullptr) noexcept {}
        IBold(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBold(IBold const&) noexcept = default;
        IBold(IBold&&) noexcept = default;
        IBold& operator=(IBold const&) & noexcept = default;
        IBold& operator=(IBold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactContentLinkProvider :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContactContentLinkProvider>
    {
        IContactContentLinkProvider(std::nullptr_t = nullptr) noexcept {}
        IContactContentLinkProvider(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactContentLinkProvider(IContactContentLinkProvider const&) noexcept = default;
        IContactContentLinkProvider(IContactContentLinkProvider&&) noexcept = default;
        IContactContentLinkProvider& operator=(IContactContentLinkProvider const&) & noexcept = default;
        IContactContentLinkProvider& operator=(IContactContentLinkProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLink :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLink>
    {
        IContentLink(std::nullptr_t = nullptr) noexcept {}
        IContentLink(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLink(IContentLink const&) noexcept = default;
        IContentLink(IContentLink&&) noexcept = default;
        IContentLink& operator=(IContentLink const&) & noexcept = default;
        IContentLink& operator=(IContentLink&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkInvokedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkInvokedEventArgs>
    {
        IContentLinkInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentLinkInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkInvokedEventArgs(IContentLinkInvokedEventArgs const&) noexcept = default;
        IContentLinkInvokedEventArgs(IContentLinkInvokedEventArgs&&) noexcept = default;
        IContentLinkInvokedEventArgs& operator=(IContentLinkInvokedEventArgs const&) & noexcept = default;
        IContentLinkInvokedEventArgs& operator=(IContentLinkInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkProvider :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkProvider>
    {
        IContentLinkProvider(std::nullptr_t = nullptr) noexcept {}
        IContentLinkProvider(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkProvider(IContentLinkProvider const&) noexcept = default;
        IContentLinkProvider(IContentLinkProvider&&) noexcept = default;
        IContentLinkProvider& operator=(IContentLinkProvider const&) & noexcept = default;
        IContentLinkProvider& operator=(IContentLinkProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkProviderCollection :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkProviderCollection>
    {
        IContentLinkProviderCollection(std::nullptr_t = nullptr) noexcept {}
        IContentLinkProviderCollection(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkProviderCollection(IContentLinkProviderCollection const&) noexcept = default;
        IContentLinkProviderCollection(IContentLinkProviderCollection&&) noexcept = default;
        IContentLinkProviderCollection& operator=(IContentLinkProviderCollection const&) & noexcept = default;
        IContentLinkProviderCollection& operator=(IContentLinkProviderCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkProviderFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkProviderFactory>
    {
        IContentLinkProviderFactory(std::nullptr_t = nullptr) noexcept {}
        IContentLinkProviderFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkProviderFactory(IContentLinkProviderFactory const&) noexcept = default;
        IContentLinkProviderFactory(IContentLinkProviderFactory&&) noexcept = default;
        IContentLinkProviderFactory& operator=(IContentLinkProviderFactory const&) & noexcept = default;
        IContentLinkProviderFactory& operator=(IContentLinkProviderFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkStatics>
    {
        IContentLinkStatics(std::nullptr_t = nullptr) noexcept {}
        IContentLinkStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkStatics(IContentLinkStatics const&) noexcept = default;
        IContentLinkStatics(IContentLinkStatics&&) noexcept = default;
        IContentLinkStatics& operator=(IContentLinkStatics const&) & noexcept = default;
        IContentLinkStatics& operator=(IContentLinkStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGlyphs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGlyphs>
    {
        IGlyphs(std::nullptr_t = nullptr) noexcept {}
        IGlyphs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGlyphs(IGlyphs const&) noexcept = default;
        IGlyphs(IGlyphs&&) noexcept = default;
        IGlyphs& operator=(IGlyphs const&) & noexcept = default;
        IGlyphs& operator=(IGlyphs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGlyphs2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGlyphs2>
    {
        IGlyphs2(std::nullptr_t = nullptr) noexcept {}
        IGlyphs2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGlyphs2(IGlyphs2 const&) noexcept = default;
        IGlyphs2(IGlyphs2&&) noexcept = default;
        IGlyphs2& operator=(IGlyphs2 const&) & noexcept = default;
        IGlyphs2& operator=(IGlyphs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGlyphsStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGlyphsStatics>
    {
        IGlyphsStatics(std::nullptr_t = nullptr) noexcept {}
        IGlyphsStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGlyphsStatics(IGlyphsStatics const&) noexcept = default;
        IGlyphsStatics(IGlyphsStatics&&) noexcept = default;
        IGlyphsStatics& operator=(IGlyphsStatics const&) & noexcept = default;
        IGlyphsStatics& operator=(IGlyphsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGlyphsStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGlyphsStatics2>
    {
        IGlyphsStatics2(std::nullptr_t = nullptr) noexcept {}
        IGlyphsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGlyphsStatics2(IGlyphsStatics2 const&) noexcept = default;
        IGlyphsStatics2(IGlyphsStatics2&&) noexcept = default;
        IGlyphsStatics2& operator=(IGlyphsStatics2 const&) & noexcept = default;
        IGlyphsStatics2& operator=(IGlyphsStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlink :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlink>
    {
        IHyperlink(std::nullptr_t = nullptr) noexcept {}
        IHyperlink(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlink(IHyperlink const&) noexcept = default;
        IHyperlink(IHyperlink&&) noexcept = default;
        IHyperlink& operator=(IHyperlink const&) & noexcept = default;
        IHyperlink& operator=(IHyperlink&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlink2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlink2>
    {
        IHyperlink2(std::nullptr_t = nullptr) noexcept {}
        IHyperlink2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlink2(IHyperlink2 const&) noexcept = default;
        IHyperlink2(IHyperlink2&&) noexcept = default;
        IHyperlink2& operator=(IHyperlink2 const&) & noexcept = default;
        IHyperlink2& operator=(IHyperlink2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlink3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlink3>
    {
        IHyperlink3(std::nullptr_t = nullptr) noexcept {}
        IHyperlink3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlink3(IHyperlink3 const&) noexcept = default;
        IHyperlink3(IHyperlink3&&) noexcept = default;
        IHyperlink3& operator=(IHyperlink3 const&) & noexcept = default;
        IHyperlink3& operator=(IHyperlink3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlink4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlink4>
    {
        IHyperlink4(std::nullptr_t = nullptr) noexcept {}
        IHyperlink4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlink4(IHyperlink4 const&) noexcept = default;
        IHyperlink4(IHyperlink4&&) noexcept = default;
        IHyperlink4& operator=(IHyperlink4 const&) & noexcept = default;
        IHyperlink4& operator=(IHyperlink4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlink5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlink5>
    {
        IHyperlink5(std::nullptr_t = nullptr) noexcept {}
        IHyperlink5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlink5(IHyperlink5 const&) noexcept = default;
        IHyperlink5(IHyperlink5&&) noexcept = default;
        IHyperlink5& operator=(IHyperlink5 const&) & noexcept = default;
        IHyperlink5& operator=(IHyperlink5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkClickEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkClickEventArgs>
    {
        IHyperlinkClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkClickEventArgs(IHyperlinkClickEventArgs const&) noexcept = default;
        IHyperlinkClickEventArgs(IHyperlinkClickEventArgs&&) noexcept = default;
        IHyperlinkClickEventArgs& operator=(IHyperlinkClickEventArgs const&) & noexcept = default;
        IHyperlinkClickEventArgs& operator=(IHyperlinkClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkStatics>
    {
        IHyperlinkStatics(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkStatics(IHyperlinkStatics const&) noexcept = default;
        IHyperlinkStatics(IHyperlinkStatics&&) noexcept = default;
        IHyperlinkStatics& operator=(IHyperlinkStatics const&) & noexcept = default;
        IHyperlinkStatics& operator=(IHyperlinkStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkStatics2>
    {
        IHyperlinkStatics2(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkStatics2(IHyperlinkStatics2 const&) noexcept = default;
        IHyperlinkStatics2(IHyperlinkStatics2&&) noexcept = default;
        IHyperlinkStatics2& operator=(IHyperlinkStatics2 const&) & noexcept = default;
        IHyperlinkStatics2& operator=(IHyperlinkStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkStatics3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkStatics3>
    {
        IHyperlinkStatics3(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkStatics3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkStatics3(IHyperlinkStatics3 const&) noexcept = default;
        IHyperlinkStatics3(IHyperlinkStatics3&&) noexcept = default;
        IHyperlinkStatics3& operator=(IHyperlinkStatics3 const&) & noexcept = default;
        IHyperlinkStatics3& operator=(IHyperlinkStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkStatics4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkStatics4>
    {
        IHyperlinkStatics4(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkStatics4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkStatics4(IHyperlinkStatics4 const&) noexcept = default;
        IHyperlinkStatics4(IHyperlinkStatics4&&) noexcept = default;
        IHyperlinkStatics4& operator=(IHyperlinkStatics4 const&) & noexcept = default;
        IHyperlinkStatics4& operator=(IHyperlinkStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkStatics5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkStatics5>
    {
        IHyperlinkStatics5(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkStatics5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkStatics5(IHyperlinkStatics5 const&) noexcept = default;
        IHyperlinkStatics5(IHyperlinkStatics5&&) noexcept = default;
        IHyperlinkStatics5& operator=(IHyperlinkStatics5 const&) & noexcept = default;
        IHyperlinkStatics5& operator=(IHyperlinkStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInline :
        Windows::Foundation::IInspectable,
        impl::consume_t<IInline>
    {
        IInline(std::nullptr_t = nullptr) noexcept {}
        IInline(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInline(IInline const&) noexcept = default;
        IInline(IInline&&) noexcept = default;
        IInline& operator=(IInline const&) & noexcept = default;
        IInline& operator=(IInline&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInlineFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IInlineFactory>
    {
        IInlineFactory(std::nullptr_t = nullptr) noexcept {}
        IInlineFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInlineFactory(IInlineFactory const&) noexcept = default;
        IInlineFactory(IInlineFactory&&) noexcept = default;
        IInlineFactory& operator=(IInlineFactory const&) & noexcept = default;
        IInlineFactory& operator=(IInlineFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInlineUIContainer :
        Windows::Foundation::IInspectable,
        impl::consume_t<IInlineUIContainer>
    {
        IInlineUIContainer(std::nullptr_t = nullptr) noexcept {}
        IInlineUIContainer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInlineUIContainer(IInlineUIContainer const&) noexcept = default;
        IInlineUIContainer(IInlineUIContainer&&) noexcept = default;
        IInlineUIContainer& operator=(IInlineUIContainer const&) & noexcept = default;
        IInlineUIContainer& operator=(IInlineUIContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItalic :
        Windows::Foundation::IInspectable,
        impl::consume_t<IItalic>
    {
        IItalic(std::nullptr_t = nullptr) noexcept {}
        IItalic(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItalic(IItalic const&) noexcept = default;
        IItalic(IItalic&&) noexcept = default;
        IItalic& operator=(IItalic const&) & noexcept = default;
        IItalic& operator=(IItalic&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineBreak :
        Windows::Foundation::IInspectable,
        impl::consume_t<ILineBreak>
    {
        ILineBreak(std::nullptr_t = nullptr) noexcept {}
        ILineBreak(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineBreak(ILineBreak const&) noexcept = default;
        ILineBreak(ILineBreak&&) noexcept = default;
        ILineBreak& operator=(ILineBreak const&) & noexcept = default;
        ILineBreak& operator=(ILineBreak&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IParagraph :
        Windows::Foundation::IInspectable,
        impl::consume_t<IParagraph>
    {
        IParagraph(std::nullptr_t = nullptr) noexcept {}
        IParagraph(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IParagraph(IParagraph const&) noexcept = default;
        IParagraph(IParagraph&&) noexcept = default;
        IParagraph& operator=(IParagraph const&) & noexcept = default;
        IParagraph& operator=(IParagraph&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IParagraphStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IParagraphStatics>
    {
        IParagraphStatics(std::nullptr_t = nullptr) noexcept {}
        IParagraphStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IParagraphStatics(IParagraphStatics const&) noexcept = default;
        IParagraphStatics(IParagraphStatics&&) noexcept = default;
        IParagraphStatics& operator=(IParagraphStatics const&) & noexcept = default;
        IParagraphStatics& operator=(IParagraphStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlaceContentLinkProvider :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceContentLinkProvider>
    {
        IPlaceContentLinkProvider(std::nullptr_t = nullptr) noexcept {}
        IPlaceContentLinkProvider(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlaceContentLinkProvider(IPlaceContentLinkProvider const&) noexcept = default;
        IPlaceContentLinkProvider(IPlaceContentLinkProvider&&) noexcept = default;
        IPlaceContentLinkProvider& operator=(IPlaceContentLinkProvider const&) & noexcept = default;
        IPlaceContentLinkProvider& operator=(IPlaceContentLinkProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRun :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRun>
    {
        IRun(std::nullptr_t = nullptr) noexcept {}
        IRun(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRun(IRun const&) noexcept = default;
        IRun(IRun&&) noexcept = default;
        IRun& operator=(IRun const&) & noexcept = default;
        IRun& operator=(IRun&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRunStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRunStatics>
    {
        IRunStatics(std::nullptr_t = nullptr) noexcept {}
        IRunStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRunStatics(IRunStatics const&) noexcept = default;
        IRunStatics(IRunStatics&&) noexcept = default;
        IRunStatics& operator=(IRunStatics const&) & noexcept = default;
        IRunStatics& operator=(IRunStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpan :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISpan>
    {
        ISpan(std::nullptr_t = nullptr) noexcept {}
        ISpan(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpan(ISpan const&) noexcept = default;
        ISpan(ISpan&&) noexcept = default;
        ISpan& operator=(ISpan const&) & noexcept = default;
        ISpan& operator=(ISpan&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpanFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISpanFactory>
    {
        ISpanFactory(std::nullptr_t = nullptr) noexcept {}
        ISpanFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpanFactory(ISpanFactory const&) noexcept = default;
        ISpanFactory(ISpanFactory&&) noexcept = default;
        ISpanFactory& operator=(ISpanFactory const&) & noexcept = default;
        ISpanFactory& operator=(ISpanFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElement :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElement>
    {
        ITextElement(std::nullptr_t = nullptr) noexcept {}
        ITextElement(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElement(ITextElement const&) noexcept = default;
        ITextElement(ITextElement&&) noexcept = default;
        ITextElement& operator=(ITextElement const&) & noexcept = default;
        ITextElement& operator=(ITextElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElement2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElement2>
    {
        ITextElement2(std::nullptr_t = nullptr) noexcept {}
        ITextElement2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElement2(ITextElement2 const&) noexcept = default;
        ITextElement2(ITextElement2&&) noexcept = default;
        ITextElement2& operator=(ITextElement2 const&) & noexcept = default;
        ITextElement2& operator=(ITextElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElement3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElement3>
    {
        ITextElement3(std::nullptr_t = nullptr) noexcept {}
        ITextElement3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElement3(ITextElement3 const&) noexcept = default;
        ITextElement3(ITextElement3&&) noexcept = default;
        ITextElement3& operator=(ITextElement3 const&) & noexcept = default;
        ITextElement3& operator=(ITextElement3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElement4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElement4>
    {
        ITextElement4(std::nullptr_t = nullptr) noexcept {}
        ITextElement4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElement4(ITextElement4 const&) noexcept = default;
        ITextElement4(ITextElement4&&) noexcept = default;
        ITextElement4& operator=(ITextElement4 const&) & noexcept = default;
        ITextElement4& operator=(ITextElement4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElement5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElement5>
    {
        ITextElement5(std::nullptr_t = nullptr) noexcept {}
        ITextElement5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElement5(ITextElement5 const&) noexcept = default;
        ITextElement5(ITextElement5&&) noexcept = default;
        ITextElement5& operator=(ITextElement5 const&) & noexcept = default;
        ITextElement5& operator=(ITextElement5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementFactory>
    {
        ITextElementFactory(std::nullptr_t = nullptr) noexcept {}
        ITextElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementFactory(ITextElementFactory const&) noexcept = default;
        ITextElementFactory(ITextElementFactory&&) noexcept = default;
        ITextElementFactory& operator=(ITextElementFactory const&) & noexcept = default;
        ITextElementFactory& operator=(ITextElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementOverrides :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementOverrides>
    {
        ITextElementOverrides(std::nullptr_t = nullptr) noexcept {}
        ITextElementOverrides(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementOverrides(ITextElementOverrides const&) noexcept = default;
        ITextElementOverrides(ITextElementOverrides&&) noexcept = default;
        ITextElementOverrides& operator=(ITextElementOverrides const&) & noexcept = default;
        ITextElementOverrides& operator=(ITextElementOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementStatics>
    {
        ITextElementStatics(std::nullptr_t = nullptr) noexcept {}
        ITextElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementStatics(ITextElementStatics const&) noexcept = default;
        ITextElementStatics(ITextElementStatics&&) noexcept = default;
        ITextElementStatics& operator=(ITextElementStatics const&) & noexcept = default;
        ITextElementStatics& operator=(ITextElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementStatics2>
    {
        ITextElementStatics2(std::nullptr_t = nullptr) noexcept {}
        ITextElementStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementStatics2(ITextElementStatics2 const&) noexcept = default;
        ITextElementStatics2(ITextElementStatics2&&) noexcept = default;
        ITextElementStatics2& operator=(ITextElementStatics2 const&) & noexcept = default;
        ITextElementStatics2& operator=(ITextElementStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementStatics3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementStatics3>
    {
        ITextElementStatics3(std::nullptr_t = nullptr) noexcept {}
        ITextElementStatics3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementStatics3(ITextElementStatics3 const&) noexcept = default;
        ITextElementStatics3(ITextElementStatics3&&) noexcept = default;
        ITextElementStatics3& operator=(ITextElementStatics3 const&) & noexcept = default;
        ITextElementStatics3& operator=(ITextElementStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextElementStatics4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextElementStatics4>
    {
        ITextElementStatics4(std::nullptr_t = nullptr) noexcept {}
        ITextElementStatics4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextElementStatics4(ITextElementStatics4 const&) noexcept = default;
        ITextElementStatics4(ITextElementStatics4&&) noexcept = default;
        ITextElementStatics4& operator=(ITextElementStatics4 const&) & noexcept = default;
        ITextElementStatics4& operator=(ITextElementStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextHighlighter :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextHighlighter>
    {
        ITextHighlighter(std::nullptr_t = nullptr) noexcept {}
        ITextHighlighter(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextHighlighter(ITextHighlighter const&) noexcept = default;
        ITextHighlighter(ITextHighlighter&&) noexcept = default;
        ITextHighlighter& operator=(ITextHighlighter const&) & noexcept = default;
        ITextHighlighter& operator=(ITextHighlighter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextHighlighterBase :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextHighlighterBase>
    {
        ITextHighlighterBase(std::nullptr_t = nullptr) noexcept {}
        ITextHighlighterBase(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextHighlighterBase(ITextHighlighterBase const&) noexcept = default;
        ITextHighlighterBase(ITextHighlighterBase&&) noexcept = default;
        ITextHighlighterBase& operator=(ITextHighlighterBase const&) & noexcept = default;
        ITextHighlighterBase& operator=(ITextHighlighterBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextHighlighterBaseFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextHighlighterBaseFactory>
    {
        ITextHighlighterBaseFactory(std::nullptr_t = nullptr) noexcept {}
        ITextHighlighterBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextHighlighterBaseFactory(ITextHighlighterBaseFactory const&) noexcept = default;
        ITextHighlighterBaseFactory(ITextHighlighterBaseFactory&&) noexcept = default;
        ITextHighlighterBaseFactory& operator=(ITextHighlighterBaseFactory const&) & noexcept = default;
        ITextHighlighterBaseFactory& operator=(ITextHighlighterBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextHighlighterFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextHighlighterFactory>
    {
        ITextHighlighterFactory(std::nullptr_t = nullptr) noexcept {}
        ITextHighlighterFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextHighlighterFactory(ITextHighlighterFactory const&) noexcept = default;
        ITextHighlighterFactory(ITextHighlighterFactory&&) noexcept = default;
        ITextHighlighterFactory& operator=(ITextHighlighterFactory const&) & noexcept = default;
        ITextHighlighterFactory& operator=(ITextHighlighterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextHighlighterStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextHighlighterStatics>
    {
        ITextHighlighterStatics(std::nullptr_t = nullptr) noexcept {}
        ITextHighlighterStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextHighlighterStatics(ITextHighlighterStatics const&) noexcept = default;
        ITextHighlighterStatics(ITextHighlighterStatics&&) noexcept = default;
        ITextHighlighterStatics& operator=(ITextHighlighterStatics const&) & noexcept = default;
        ITextHighlighterStatics& operator=(ITextHighlighterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextPointer :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITextPointer>
    {
        ITextPointer(std::nullptr_t = nullptr) noexcept {}
        ITextPointer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextPointer(ITextPointer const&) noexcept = default;
        ITextPointer(ITextPointer&&) noexcept = default;
        ITextPointer& operator=(ITextPointer const&) & noexcept = default;
        ITextPointer& operator=(ITextPointer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITypography :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITypography>
    {
        ITypography(std::nullptr_t = nullptr) noexcept {}
        ITypography(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITypography(ITypography const&) noexcept = default;
        ITypography(ITypography&&) noexcept = default;
        ITypography& operator=(ITypography const&) & noexcept = default;
        ITypography& operator=(ITypography&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITypographyStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITypographyStatics>
    {
        ITypographyStatics(std::nullptr_t = nullptr) noexcept {}
        ITypographyStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITypographyStatics(ITypographyStatics const&) noexcept = default;
        ITypographyStatics(ITypographyStatics&&) noexcept = default;
        ITypographyStatics& operator=(ITypographyStatics const&) & noexcept = default;
        ITypographyStatics& operator=(ITypographyStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnderline :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUnderline>
    {
        IUnderline(std::nullptr_t = nullptr) noexcept {}
        IUnderline(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnderline(IUnderline const&) noexcept = default;
        IUnderline(IUnderline&&) noexcept = default;
        IUnderline& operator=(IUnderline const&) & noexcept = default;
        IUnderline& operator=(IUnderline&&) & noexcept = default;
    };
}
#endif
