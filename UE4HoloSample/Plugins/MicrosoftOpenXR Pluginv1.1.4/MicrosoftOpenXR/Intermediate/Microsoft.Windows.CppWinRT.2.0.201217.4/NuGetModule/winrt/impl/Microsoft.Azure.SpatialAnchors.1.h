// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Microsoft_Azure_SpatialAnchors_1_H
#define WINRT_Microsoft_Azure_SpatialAnchors_1_H
#include "winrt/impl/Microsoft.Azure.SpatialAnchors.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Azure::SpatialAnchors
{
    struct __declspec(empty_bases) IAnchorLocateCriteria :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorLocateCriteria>
    {
        IAnchorLocateCriteria(std::nullptr_t = nullptr) noexcept {}
        IAnchorLocateCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnchorLocateCriteria(IAnchorLocateCriteria const&) noexcept = default;
        IAnchorLocateCriteria(IAnchorLocateCriteria&&) noexcept = default;
        IAnchorLocateCriteria& operator=(IAnchorLocateCriteria const&) & noexcept = default;
        IAnchorLocateCriteria& operator=(IAnchorLocateCriteria&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAnchorLocatedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorLocatedEventArgs>
    {
        IAnchorLocatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnchorLocatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnchorLocatedEventArgs(IAnchorLocatedEventArgs const&) noexcept = default;
        IAnchorLocatedEventArgs(IAnchorLocatedEventArgs&&) noexcept = default;
        IAnchorLocatedEventArgs& operator=(IAnchorLocatedEventArgs const&) & noexcept = default;
        IAnchorLocatedEventArgs& operator=(IAnchorLocatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchor :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchor>
    {
        ICloudSpatialAnchor(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchor(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchor(ICloudSpatialAnchor const&) noexcept = default;
        ICloudSpatialAnchor(ICloudSpatialAnchor&&) noexcept = default;
        ICloudSpatialAnchor& operator=(ICloudSpatialAnchor const&) & noexcept = default;
        ICloudSpatialAnchor& operator=(ICloudSpatialAnchor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorMap :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorMap>
    {
        ICloudSpatialAnchorMap(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorMap(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchorMap(ICloudSpatialAnchorMap const&) noexcept = default;
        ICloudSpatialAnchorMap(ICloudSpatialAnchorMap&&) noexcept = default;
        ICloudSpatialAnchorMap& operator=(ICloudSpatialAnchorMap const&) & noexcept = default;
        ICloudSpatialAnchorMap& operator=(ICloudSpatialAnchorMap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSession :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSession>
    {
        ICloudSpatialAnchorSession(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchorSession(ICloudSpatialAnchorSession const&) noexcept = default;
        ICloudSpatialAnchorSession(ICloudSpatialAnchorSession&&) noexcept = default;
        ICloudSpatialAnchorSession& operator=(ICloudSpatialAnchorSession const&) & noexcept = default;
        ICloudSpatialAnchorSession& operator=(ICloudSpatialAnchorSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSessionDeferral :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSessionDeferral>
    {
        ICloudSpatialAnchorSessionDeferral(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSessionDeferral(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchorSessionDeferral(ICloudSpatialAnchorSessionDeferral const&) noexcept = default;
        ICloudSpatialAnchorSessionDeferral(ICloudSpatialAnchorSessionDeferral&&) noexcept = default;
        ICloudSpatialAnchorSessionDeferral& operator=(ICloudSpatialAnchorSessionDeferral const&) & noexcept = default;
        ICloudSpatialAnchorSessionDeferral& operator=(ICloudSpatialAnchorSessionDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSessionDiagnostics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSessionDiagnostics>
    {
        ICloudSpatialAnchorSessionDiagnostics(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSessionDiagnostics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchorSessionDiagnostics(ICloudSpatialAnchorSessionDiagnostics const&) noexcept = default;
        ICloudSpatialAnchorSessionDiagnostics(ICloudSpatialAnchorSessionDiagnostics&&) noexcept = default;
        ICloudSpatialAnchorSessionDiagnostics& operator=(ICloudSpatialAnchorSessionDiagnostics const&) & noexcept = default;
        ICloudSpatialAnchorSessionDiagnostics& operator=(ICloudSpatialAnchorSessionDiagnostics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorWatcher :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorWatcher>
    {
        ICloudSpatialAnchorWatcher(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorWatcher(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICloudSpatialAnchorWatcher(ICloudSpatialAnchorWatcher const&) noexcept = default;
        ICloudSpatialAnchorWatcher(ICloudSpatialAnchorWatcher&&) noexcept = default;
        ICloudSpatialAnchorWatcher& operator=(ICloudSpatialAnchorWatcher const&) & noexcept = default;
        ICloudSpatialAnchorWatcher& operator=(ICloudSpatialAnchorWatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeoLocation :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGeoLocation>
    {
        IGeoLocation(std::nullptr_t = nullptr) noexcept {}
        IGeoLocation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeoLocation(IGeoLocation const&) noexcept = default;
        IGeoLocation(IGeoLocation&&) noexcept = default;
        IGeoLocation& operator=(IGeoLocation const&) & noexcept = default;
        IGeoLocation& operator=(IGeoLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILocateAnchorsCompletedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ILocateAnchorsCompletedEventArgs>
    {
        ILocateAnchorsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILocateAnchorsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILocateAnchorsCompletedEventArgs(ILocateAnchorsCompletedEventArgs const&) noexcept = default;
        ILocateAnchorsCompletedEventArgs(ILocateAnchorsCompletedEventArgs&&) noexcept = default;
        ILocateAnchorsCompletedEventArgs& operator=(ILocateAnchorsCompletedEventArgs const&) & noexcept = default;
        ILocateAnchorsCompletedEventArgs& operator=(ILocateAnchorsCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INearAnchorCriteria :
        Windows::Foundation::IInspectable,
        impl::consume_t<INearAnchorCriteria>
    {
        INearAnchorCriteria(std::nullptr_t = nullptr) noexcept {}
        INearAnchorCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INearAnchorCriteria(INearAnchorCriteria const&) noexcept = default;
        INearAnchorCriteria(INearAnchorCriteria&&) noexcept = default;
        INearAnchorCriteria& operator=(INearAnchorCriteria const&) & noexcept = default;
        INearAnchorCriteria& operator=(INearAnchorCriteria&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INearDeviceCriteria :
        Windows::Foundation::IInspectable,
        impl::consume_t<INearDeviceCriteria>
    {
        INearDeviceCriteria(std::nullptr_t = nullptr) noexcept {}
        INearDeviceCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INearDeviceCriteria(INearDeviceCriteria const&) noexcept = default;
        INearDeviceCriteria(INearDeviceCriteria&&) noexcept = default;
        INearDeviceCriteria& operator=(INearDeviceCriteria const&) & noexcept = default;
        INearDeviceCriteria& operator=(INearDeviceCriteria&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOnLogDebugEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IOnLogDebugEventArgs>
    {
        IOnLogDebugEventArgs(std::nullptr_t = nullptr) noexcept {}
        IOnLogDebugEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOnLogDebugEventArgs(IOnLogDebugEventArgs const&) noexcept = default;
        IOnLogDebugEventArgs(IOnLogDebugEventArgs&&) noexcept = default;
        IOnLogDebugEventArgs& operator=(IOnLogDebugEventArgs const&) & noexcept = default;
        IOnLogDebugEventArgs& operator=(IOnLogDebugEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlatformLocationProvider :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPlatformLocationProvider>
    {
        IPlatformLocationProvider(std::nullptr_t = nullptr) noexcept {}
        IPlatformLocationProvider(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlatformLocationProvider(IPlatformLocationProvider const&) noexcept = default;
        IPlatformLocationProvider(IPlatformLocationProvider&&) noexcept = default;
        IPlatformLocationProvider& operator=(IPlatformLocationProvider const&) & noexcept = default;
        IPlatformLocationProvider& operator=(IPlatformLocationProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorCapabilities :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISensorCapabilities>
    {
        ISensorCapabilities(std::nullptr_t = nullptr) noexcept {}
        ISensorCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorCapabilities(ISensorCapabilities const&) noexcept = default;
        ISensorCapabilities(ISensorCapabilities&&) noexcept = default;
        ISensorCapabilities& operator=(ISensorCapabilities const&) & noexcept = default;
        ISensorCapabilities& operator=(ISensorCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorFingerprintEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISensorFingerprintEventArgs>
    {
        ISensorFingerprintEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISensorFingerprintEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorFingerprintEventArgs(ISensorFingerprintEventArgs const&) noexcept = default;
        ISensorFingerprintEventArgs(ISensorFingerprintEventArgs&&) noexcept = default;
        ISensorFingerprintEventArgs& operator=(ISensorFingerprintEventArgs const&) & noexcept = default;
        ISensorFingerprintEventArgs& operator=(ISensorFingerprintEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISessionConfiguration :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionConfiguration>
    {
        ISessionConfiguration(std::nullptr_t = nullptr) noexcept {}
        ISessionConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISessionConfiguration(ISessionConfiguration const&) noexcept = default;
        ISessionConfiguration(ISessionConfiguration&&) noexcept = default;
        ISessionConfiguration& operator=(ISessionConfiguration const&) & noexcept = default;
        ISessionConfiguration& operator=(ISessionConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISessionErrorEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionErrorEventArgs>
    {
        ISessionErrorEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISessionErrorEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISessionErrorEventArgs(ISessionErrorEventArgs const&) noexcept = default;
        ISessionErrorEventArgs(ISessionErrorEventArgs&&) noexcept = default;
        ISessionErrorEventArgs& operator=(ISessionErrorEventArgs const&) & noexcept = default;
        ISessionErrorEventArgs& operator=(ISessionErrorEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISessionStatus :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionStatus>
    {
        ISessionStatus(std::nullptr_t = nullptr) noexcept {}
        ISessionStatus(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISessionStatus(ISessionStatus const&) noexcept = default;
        ISessionStatus(ISessionStatus&&) noexcept = default;
        ISessionStatus& operator=(ISessionStatus const&) & noexcept = default;
        ISessionStatus& operator=(ISessionStatus&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISessionUpdatedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionUpdatedEventArgs>
    {
        ISessionUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISessionUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISessionUpdatedEventArgs(ISessionUpdatedEventArgs const&) noexcept = default;
        ISessionUpdatedEventArgs(ISessionUpdatedEventArgs&&) noexcept = default;
        ISessionUpdatedEventArgs& operator=(ISessionUpdatedEventArgs const&) & noexcept = default;
        ISessionUpdatedEventArgs& operator=(ISessionUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITokenRequiredEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequiredEventArgs>
    {
        ITokenRequiredEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITokenRequiredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITokenRequiredEventArgs(ITokenRequiredEventArgs const&) noexcept = default;
        ITokenRequiredEventArgs(ITokenRequiredEventArgs&&) noexcept = default;
        ITokenRequiredEventArgs& operator=(ITokenRequiredEventArgs const&) & noexcept = default;
        ITokenRequiredEventArgs& operator=(ITokenRequiredEventArgs&&) & noexcept = default;
    };
}
#endif
