// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Windows_UI_Xaml_1_H
#define WINRT_Windows_UI_Xaml_1_H
#include "winrt/impl/Windows.UI.Xaml.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml
{
    struct __declspec(empty_bases) IAdaptiveTrigger :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAdaptiveTrigger>
    {
        IAdaptiveTrigger(std::nullptr_t = nullptr) noexcept {}
        IAdaptiveTrigger(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAdaptiveTrigger(IAdaptiveTrigger const&) noexcept = default;
        IAdaptiveTrigger(IAdaptiveTrigger&&) noexcept = default;
        IAdaptiveTrigger& operator=(IAdaptiveTrigger const&) & noexcept = default;
        IAdaptiveTrigger& operator=(IAdaptiveTrigger&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAdaptiveTriggerFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAdaptiveTriggerFactory>
    {
        IAdaptiveTriggerFactory(std::nullptr_t = nullptr) noexcept {}
        IAdaptiveTriggerFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAdaptiveTriggerFactory(IAdaptiveTriggerFactory const&) noexcept = default;
        IAdaptiveTriggerFactory(IAdaptiveTriggerFactory&&) noexcept = default;
        IAdaptiveTriggerFactory& operator=(IAdaptiveTriggerFactory const&) & noexcept = default;
        IAdaptiveTriggerFactory& operator=(IAdaptiveTriggerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAdaptiveTriggerStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAdaptiveTriggerStatics>
    {
        IAdaptiveTriggerStatics(std::nullptr_t = nullptr) noexcept {}
        IAdaptiveTriggerStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAdaptiveTriggerStatics(IAdaptiveTriggerStatics const&) noexcept = default;
        IAdaptiveTriggerStatics(IAdaptiveTriggerStatics&&) noexcept = default;
        IAdaptiveTriggerStatics& operator=(IAdaptiveTriggerStatics const&) & noexcept = default;
        IAdaptiveTriggerStatics& operator=(IAdaptiveTriggerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplication :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplication>
    {
        IApplication(std::nullptr_t = nullptr) noexcept {}
        IApplication(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplication(IApplication const&) noexcept = default;
        IApplication(IApplication&&) noexcept = default;
        IApplication& operator=(IApplication const&) & noexcept = default;
        IApplication& operator=(IApplication&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplication2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplication2>
    {
        IApplication2(std::nullptr_t = nullptr) noexcept {}
        IApplication2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplication2(IApplication2 const&) noexcept = default;
        IApplication2(IApplication2&&) noexcept = default;
        IApplication2& operator=(IApplication2 const&) & noexcept = default;
        IApplication2& operator=(IApplication2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplication3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplication3>
    {
        IApplication3(std::nullptr_t = nullptr) noexcept {}
        IApplication3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplication3(IApplication3 const&) noexcept = default;
        IApplication3(IApplication3&&) noexcept = default;
        IApplication3& operator=(IApplication3 const&) & noexcept = default;
        IApplication3& operator=(IApplication3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplicationFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationFactory>
    {
        IApplicationFactory(std::nullptr_t = nullptr) noexcept {}
        IApplicationFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplicationFactory(IApplicationFactory const&) noexcept = default;
        IApplicationFactory(IApplicationFactory&&) noexcept = default;
        IApplicationFactory& operator=(IApplicationFactory const&) & noexcept = default;
        IApplicationFactory& operator=(IApplicationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplicationInitializationCallbackParams :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationInitializationCallbackParams>
    {
        IApplicationInitializationCallbackParams(std::nullptr_t = nullptr) noexcept {}
        IApplicationInitializationCallbackParams(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplicationInitializationCallbackParams(IApplicationInitializationCallbackParams const&) noexcept = default;
        IApplicationInitializationCallbackParams(IApplicationInitializationCallbackParams&&) noexcept = default;
        IApplicationInitializationCallbackParams& operator=(IApplicationInitializationCallbackParams const&) & noexcept = default;
        IApplicationInitializationCallbackParams& operator=(IApplicationInitializationCallbackParams&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplicationOverrides :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationOverrides>
    {
        IApplicationOverrides(std::nullptr_t = nullptr) noexcept {}
        IApplicationOverrides(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplicationOverrides(IApplicationOverrides const&) noexcept = default;
        IApplicationOverrides(IApplicationOverrides&&) noexcept = default;
        IApplicationOverrides& operator=(IApplicationOverrides const&) & noexcept = default;
        IApplicationOverrides& operator=(IApplicationOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplicationOverrides2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationOverrides2>
    {
        IApplicationOverrides2(std::nullptr_t = nullptr) noexcept {}
        IApplicationOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplicationOverrides2(IApplicationOverrides2 const&) noexcept = default;
        IApplicationOverrides2(IApplicationOverrides2&&) noexcept = default;
        IApplicationOverrides2& operator=(IApplicationOverrides2 const&) & noexcept = default;
        IApplicationOverrides2& operator=(IApplicationOverrides2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IApplicationStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationStatics>
    {
        IApplicationStatics(std::nullptr_t = nullptr) noexcept {}
        IApplicationStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IApplicationStatics(IApplicationStatics const&) noexcept = default;
        IApplicationStatics(IApplicationStatics&&) noexcept = default;
        IApplicationStatics& operator=(IApplicationStatics const&) & noexcept = default;
        IApplicationStatics& operator=(IApplicationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBindingFailedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBindingFailedEventArgs>
    {
        IBindingFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBindingFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBindingFailedEventArgs(IBindingFailedEventArgs const&) noexcept = default;
        IBindingFailedEventArgs(IBindingFailedEventArgs&&) noexcept = default;
        IBindingFailedEventArgs& operator=(IBindingFailedEventArgs const&) & noexcept = default;
        IBindingFailedEventArgs& operator=(IBindingFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBringIntoViewOptions :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBringIntoViewOptions>
    {
        IBringIntoViewOptions(std::nullptr_t = nullptr) noexcept {}
        IBringIntoViewOptions(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBringIntoViewOptions(IBringIntoViewOptions const&) noexcept = default;
        IBringIntoViewOptions(IBringIntoViewOptions&&) noexcept = default;
        IBringIntoViewOptions& operator=(IBringIntoViewOptions const&) & noexcept = default;
        IBringIntoViewOptions& operator=(IBringIntoViewOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBringIntoViewOptions2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBringIntoViewOptions2>
    {
        IBringIntoViewOptions2(std::nullptr_t = nullptr) noexcept {}
        IBringIntoViewOptions2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBringIntoViewOptions2(IBringIntoViewOptions2 const&) noexcept = default;
        IBringIntoViewOptions2(IBringIntoViewOptions2&&) noexcept = default;
        IBringIntoViewOptions2& operator=(IBringIntoViewOptions2 const&) & noexcept = default;
        IBringIntoViewOptions2& operator=(IBringIntoViewOptions2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBringIntoViewRequestedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBringIntoViewRequestedEventArgs>
    {
        IBringIntoViewRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBringIntoViewRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBringIntoViewRequestedEventArgs(IBringIntoViewRequestedEventArgs const&) noexcept = default;
        IBringIntoViewRequestedEventArgs(IBringIntoViewRequestedEventArgs&&) noexcept = default;
        IBringIntoViewRequestedEventArgs& operator=(IBringIntoViewRequestedEventArgs const&) & noexcept = default;
        IBringIntoViewRequestedEventArgs& operator=(IBringIntoViewRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBrushTransition :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBrushTransition>
    {
        IBrushTransition(std::nullptr_t = nullptr) noexcept {}
        IBrushTransition(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBrushTransition(IBrushTransition const&) noexcept = default;
        IBrushTransition(IBrushTransition&&) noexcept = default;
        IBrushTransition& operator=(IBrushTransition const&) & noexcept = default;
        IBrushTransition& operator=(IBrushTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBrushTransitionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBrushTransitionFactory>
    {
        IBrushTransitionFactory(std::nullptr_t = nullptr) noexcept {}
        IBrushTransitionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBrushTransitionFactory(IBrushTransitionFactory const&) noexcept = default;
        IBrushTransitionFactory(IBrushTransitionFactory&&) noexcept = default;
        IBrushTransitionFactory& operator=(IBrushTransitionFactory const&) & noexcept = default;
        IBrushTransitionFactory& operator=(IBrushTransitionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPaletteResources :
        Windows::Foundation::IInspectable,
        impl::consume_t<IColorPaletteResources>
    {
        IColorPaletteResources(std::nullptr_t = nullptr) noexcept {}
        IColorPaletteResources(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPaletteResources(IColorPaletteResources const&) noexcept = default;
        IColorPaletteResources(IColorPaletteResources&&) noexcept = default;
        IColorPaletteResources& operator=(IColorPaletteResources const&) & noexcept = default;
        IColorPaletteResources& operator=(IColorPaletteResources&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPaletteResourcesFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IColorPaletteResourcesFactory>
    {
        IColorPaletteResourcesFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPaletteResourcesFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPaletteResourcesFactory(IColorPaletteResourcesFactory const&) noexcept = default;
        IColorPaletteResourcesFactory(IColorPaletteResourcesFactory&&) noexcept = default;
        IColorPaletteResourcesFactory& operator=(IColorPaletteResourcesFactory const&) & noexcept = default;
        IColorPaletteResourcesFactory& operator=(IColorPaletteResourcesFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICornerRadiusHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICornerRadiusHelper>
    {
        ICornerRadiusHelper(std::nullptr_t = nullptr) noexcept {}
        ICornerRadiusHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICornerRadiusHelper(ICornerRadiusHelper const&) noexcept = default;
        ICornerRadiusHelper(ICornerRadiusHelper&&) noexcept = default;
        ICornerRadiusHelper& operator=(ICornerRadiusHelper const&) & noexcept = default;
        ICornerRadiusHelper& operator=(ICornerRadiusHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICornerRadiusHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICornerRadiusHelperStatics>
    {
        ICornerRadiusHelperStatics(std::nullptr_t = nullptr) noexcept {}
        ICornerRadiusHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICornerRadiusHelperStatics(ICornerRadiusHelperStatics const&) noexcept = default;
        ICornerRadiusHelperStatics(ICornerRadiusHelperStatics&&) noexcept = default;
        ICornerRadiusHelperStatics& operator=(ICornerRadiusHelperStatics const&) & noexcept = default;
        ICornerRadiusHelperStatics& operator=(ICornerRadiusHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataContextChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataContextChangedEventArgs>
    {
        IDataContextChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDataContextChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataContextChangedEventArgs(IDataContextChangedEventArgs const&) noexcept = default;
        IDataContextChangedEventArgs(IDataContextChangedEventArgs&&) noexcept = default;
        IDataContextChangedEventArgs& operator=(IDataContextChangedEventArgs const&) & noexcept = default;
        IDataContextChangedEventArgs& operator=(IDataContextChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplate :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplate>
    {
        IDataTemplate(std::nullptr_t = nullptr) noexcept {}
        IDataTemplate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplate(IDataTemplate const&) noexcept = default;
        IDataTemplate(IDataTemplate&&) noexcept = default;
        IDataTemplate& operator=(IDataTemplate const&) & noexcept = default;
        IDataTemplate& operator=(IDataTemplate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateExtension :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateExtension>
    {
        IDataTemplateExtension(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateExtension(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateExtension(IDataTemplateExtension const&) noexcept = default;
        IDataTemplateExtension(IDataTemplateExtension&&) noexcept = default;
        IDataTemplateExtension& operator=(IDataTemplateExtension const&) & noexcept = default;
        IDataTemplateExtension& operator=(IDataTemplateExtension&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateFactory>
    {
        IDataTemplateFactory(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateFactory(IDataTemplateFactory const&) noexcept = default;
        IDataTemplateFactory(IDataTemplateFactory&&) noexcept = default;
        IDataTemplateFactory& operator=(IDataTemplateFactory const&) & noexcept = default;
        IDataTemplateFactory& operator=(IDataTemplateFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateKey :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateKey>
    {
        IDataTemplateKey(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateKey(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateKey(IDataTemplateKey const&) noexcept = default;
        IDataTemplateKey(IDataTemplateKey&&) noexcept = default;
        IDataTemplateKey& operator=(IDataTemplateKey const&) & noexcept = default;
        IDataTemplateKey& operator=(IDataTemplateKey&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateKeyFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateKeyFactory>
    {
        IDataTemplateKeyFactory(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateKeyFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateKeyFactory(IDataTemplateKeyFactory const&) noexcept = default;
        IDataTemplateKeyFactory(IDataTemplateKeyFactory&&) noexcept = default;
        IDataTemplateKeyFactory& operator=(IDataTemplateKeyFactory const&) & noexcept = default;
        IDataTemplateKeyFactory& operator=(IDataTemplateKeyFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateStatics2>
    {
        IDataTemplateStatics2(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateStatics2(IDataTemplateStatics2 const&) noexcept = default;
        IDataTemplateStatics2(IDataTemplateStatics2&&) noexcept = default;
        IDataTemplateStatics2& operator=(IDataTemplateStatics2 const&) & noexcept = default;
        IDataTemplateStatics2& operator=(IDataTemplateStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDebugSettings :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDebugSettings>
    {
        IDebugSettings(std::nullptr_t = nullptr) noexcept {}
        IDebugSettings(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDebugSettings(IDebugSettings const&) noexcept = default;
        IDebugSettings(IDebugSettings&&) noexcept = default;
        IDebugSettings& operator=(IDebugSettings const&) & noexcept = default;
        IDebugSettings& operator=(IDebugSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDebugSettings2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDebugSettings2>
    {
        IDebugSettings2(std::nullptr_t = nullptr) noexcept {}
        IDebugSettings2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDebugSettings2(IDebugSettings2 const&) noexcept = default;
        IDebugSettings2(IDebugSettings2&&) noexcept = default;
        IDebugSettings2& operator=(IDebugSettings2 const&) & noexcept = default;
        IDebugSettings2& operator=(IDebugSettings2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDebugSettings3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDebugSettings3>
    {
        IDebugSettings3(std::nullptr_t = nullptr) noexcept {}
        IDebugSettings3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDebugSettings3(IDebugSettings3 const&) noexcept = default;
        IDebugSettings3(IDebugSettings3&&) noexcept = default;
        IDebugSettings3& operator=(IDebugSettings3 const&) & noexcept = default;
        IDebugSettings3& operator=(IDebugSettings3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDebugSettings4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDebugSettings4>
    {
        IDebugSettings4(std::nullptr_t = nullptr) noexcept {}
        IDebugSettings4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDebugSettings4(IDebugSettings4 const&) noexcept = default;
        IDebugSettings4(IDebugSettings4&&) noexcept = default;
        IDebugSettings4& operator=(IDebugSettings4 const&) & noexcept = default;
        IDebugSettings4& operator=(IDebugSettings4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyObject :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyObject>
    {
        IDependencyObject(std::nullptr_t = nullptr) noexcept {}
        IDependencyObject(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyObject(IDependencyObject const&) noexcept = default;
        IDependencyObject(IDependencyObject&&) noexcept = default;
        IDependencyObject& operator=(IDependencyObject const&) & noexcept = default;
        IDependencyObject& operator=(IDependencyObject&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyObject2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyObject2>
    {
        IDependencyObject2(std::nullptr_t = nullptr) noexcept {}
        IDependencyObject2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyObject2(IDependencyObject2 const&) noexcept = default;
        IDependencyObject2(IDependencyObject2&&) noexcept = default;
        IDependencyObject2& operator=(IDependencyObject2 const&) & noexcept = default;
        IDependencyObject2& operator=(IDependencyObject2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyObjectCollectionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyObjectCollectionFactory>
    {
        IDependencyObjectCollectionFactory(std::nullptr_t = nullptr) noexcept {}
        IDependencyObjectCollectionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyObjectCollectionFactory(IDependencyObjectCollectionFactory const&) noexcept = default;
        IDependencyObjectCollectionFactory(IDependencyObjectCollectionFactory&&) noexcept = default;
        IDependencyObjectCollectionFactory& operator=(IDependencyObjectCollectionFactory const&) & noexcept = default;
        IDependencyObjectCollectionFactory& operator=(IDependencyObjectCollectionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyObjectFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyObjectFactory>
    {
        IDependencyObjectFactory(std::nullptr_t = nullptr) noexcept {}
        IDependencyObjectFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyObjectFactory(IDependencyObjectFactory const&) noexcept = default;
        IDependencyObjectFactory(IDependencyObjectFactory&&) noexcept = default;
        IDependencyObjectFactory& operator=(IDependencyObjectFactory const&) & noexcept = default;
        IDependencyObjectFactory& operator=(IDependencyObjectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyProperty :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyProperty>
    {
        IDependencyProperty(std::nullptr_t = nullptr) noexcept {}
        IDependencyProperty(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyProperty(IDependencyProperty const&) noexcept = default;
        IDependencyProperty(IDependencyProperty&&) noexcept = default;
        IDependencyProperty& operator=(IDependencyProperty const&) & noexcept = default;
        IDependencyProperty& operator=(IDependencyProperty&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyPropertyChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyPropertyChangedEventArgs>
    {
        IDependencyPropertyChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDependencyPropertyChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyPropertyChangedEventArgs(IDependencyPropertyChangedEventArgs const&) noexcept = default;
        IDependencyPropertyChangedEventArgs(IDependencyPropertyChangedEventArgs&&) noexcept = default;
        IDependencyPropertyChangedEventArgs& operator=(IDependencyPropertyChangedEventArgs const&) & noexcept = default;
        IDependencyPropertyChangedEventArgs& operator=(IDependencyPropertyChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDependencyPropertyStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDependencyPropertyStatics>
    {
        IDependencyPropertyStatics(std::nullptr_t = nullptr) noexcept {}
        IDependencyPropertyStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDependencyPropertyStatics(IDependencyPropertyStatics const&) noexcept = default;
        IDependencyPropertyStatics(IDependencyPropertyStatics&&) noexcept = default;
        IDependencyPropertyStatics& operator=(IDependencyPropertyStatics const&) & noexcept = default;
        IDependencyPropertyStatics& operator=(IDependencyPropertyStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherTimer :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherTimer>
    {
        IDispatcherTimer(std::nullptr_t = nullptr) noexcept {}
        IDispatcherTimer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherTimer(IDispatcherTimer const&) noexcept = default;
        IDispatcherTimer(IDispatcherTimer&&) noexcept = default;
        IDispatcherTimer& operator=(IDispatcherTimer const&) & noexcept = default;
        IDispatcherTimer& operator=(IDispatcherTimer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherTimerFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherTimerFactory>
    {
        IDispatcherTimerFactory(std::nullptr_t = nullptr) noexcept {}
        IDispatcherTimerFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherTimerFactory(IDispatcherTimerFactory const&) noexcept = default;
        IDispatcherTimerFactory(IDispatcherTimerFactory&&) noexcept = default;
        IDispatcherTimerFactory& operator=(IDispatcherTimerFactory const&) & noexcept = default;
        IDispatcherTimerFactory& operator=(IDispatcherTimerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragEventArgs>
    {
        IDragEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragEventArgs(IDragEventArgs const&) noexcept = default;
        IDragEventArgs(IDragEventArgs&&) noexcept = default;
        IDragEventArgs& operator=(IDragEventArgs const&) & noexcept = default;
        IDragEventArgs& operator=(IDragEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragEventArgs2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragEventArgs2>
    {
        IDragEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IDragEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragEventArgs2(IDragEventArgs2 const&) noexcept = default;
        IDragEventArgs2(IDragEventArgs2&&) noexcept = default;
        IDragEventArgs2& operator=(IDragEventArgs2 const&) & noexcept = default;
        IDragEventArgs2& operator=(IDragEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragEventArgs3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragEventArgs3>
    {
        IDragEventArgs3(std::nullptr_t = nullptr) noexcept {}
        IDragEventArgs3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragEventArgs3(IDragEventArgs3 const&) noexcept = default;
        IDragEventArgs3(IDragEventArgs3&&) noexcept = default;
        IDragEventArgs3& operator=(IDragEventArgs3 const&) & noexcept = default;
        IDragEventArgs3& operator=(IDragEventArgs3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragOperationDeferral :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragOperationDeferral>
    {
        IDragOperationDeferral(std::nullptr_t = nullptr) noexcept {}
        IDragOperationDeferral(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragOperationDeferral(IDragOperationDeferral const&) noexcept = default;
        IDragOperationDeferral(IDragOperationDeferral&&) noexcept = default;
        IDragOperationDeferral& operator=(IDragOperationDeferral const&) & noexcept = default;
        IDragOperationDeferral& operator=(IDragOperationDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragStartingEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragStartingEventArgs>
    {
        IDragStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragStartingEventArgs(IDragStartingEventArgs const&) noexcept = default;
        IDragStartingEventArgs(IDragStartingEventArgs&&) noexcept = default;
        IDragStartingEventArgs& operator=(IDragStartingEventArgs const&) & noexcept = default;
        IDragStartingEventArgs& operator=(IDragStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragStartingEventArgs2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragStartingEventArgs2>
    {
        IDragStartingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IDragStartingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragStartingEventArgs2(IDragStartingEventArgs2 const&) noexcept = default;
        IDragStartingEventArgs2(IDragStartingEventArgs2&&) noexcept = default;
        IDragStartingEventArgs2& operator=(IDragStartingEventArgs2 const&) & noexcept = default;
        IDragStartingEventArgs2& operator=(IDragStartingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragUI :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragUI>
    {
        IDragUI(std::nullptr_t = nullptr) noexcept {}
        IDragUI(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragUI(IDragUI const&) noexcept = default;
        IDragUI(IDragUI&&) noexcept = default;
        IDragUI& operator=(IDragUI const&) & noexcept = default;
        IDragUI& operator=(IDragUI&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragUIOverride :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDragUIOverride>
    {
        IDragUIOverride(std::nullptr_t = nullptr) noexcept {}
        IDragUIOverride(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragUIOverride(IDragUIOverride const&) noexcept = default;
        IDragUIOverride(IDragUIOverride&&) noexcept = default;
        IDragUIOverride& operator=(IDragUIOverride const&) & noexcept = default;
        IDragUIOverride& operator=(IDragUIOverride&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropCompletedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDropCompletedEventArgs>
    {
        IDropCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDropCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropCompletedEventArgs(IDropCompletedEventArgs const&) noexcept = default;
        IDropCompletedEventArgs(IDropCompletedEventArgs&&) noexcept = default;
        IDropCompletedEventArgs& operator=(IDropCompletedEventArgs const&) & noexcept = default;
        IDropCompletedEventArgs& operator=(IDropCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDurationHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDurationHelper>
    {
        IDurationHelper(std::nullptr_t = nullptr) noexcept {}
        IDurationHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDurationHelper(IDurationHelper const&) noexcept = default;
        IDurationHelper(IDurationHelper&&) noexcept = default;
        IDurationHelper& operator=(IDurationHelper const&) & noexcept = default;
        IDurationHelper& operator=(IDurationHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDurationHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDurationHelperStatics>
    {
        IDurationHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IDurationHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDurationHelperStatics(IDurationHelperStatics const&) noexcept = default;
        IDurationHelperStatics(IDurationHelperStatics&&) noexcept = default;
        IDurationHelperStatics& operator=(IDurationHelperStatics const&) & noexcept = default;
        IDurationHelperStatics& operator=(IDurationHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEffectiveViewportChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IEffectiveViewportChangedEventArgs>
    {
        IEffectiveViewportChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IEffectiveViewportChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEffectiveViewportChangedEventArgs(IEffectiveViewportChangedEventArgs const&) noexcept = default;
        IEffectiveViewportChangedEventArgs(IEffectiveViewportChangedEventArgs&&) noexcept = default;
        IEffectiveViewportChangedEventArgs& operator=(IEffectiveViewportChangedEventArgs const&) & noexcept = default;
        IEffectiveViewportChangedEventArgs& operator=(IEffectiveViewportChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementFactory>
    {
        IElementFactory(std::nullptr_t = nullptr) noexcept {}
        IElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementFactory(IElementFactory const&) noexcept = default;
        IElementFactory(IElementFactory&&) noexcept = default;
        IElementFactory& operator=(IElementFactory const&) & noexcept = default;
        IElementFactory& operator=(IElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementFactoryGetArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementFactoryGetArgs>
    {
        IElementFactoryGetArgs(std::nullptr_t = nullptr) noexcept {}
        IElementFactoryGetArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementFactoryGetArgs(IElementFactoryGetArgs const&) noexcept = default;
        IElementFactoryGetArgs(IElementFactoryGetArgs&&) noexcept = default;
        IElementFactoryGetArgs& operator=(IElementFactoryGetArgs const&) & noexcept = default;
        IElementFactoryGetArgs& operator=(IElementFactoryGetArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementFactoryGetArgsFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementFactoryGetArgsFactory>
    {
        IElementFactoryGetArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IElementFactoryGetArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementFactoryGetArgsFactory(IElementFactoryGetArgsFactory const&) noexcept = default;
        IElementFactoryGetArgsFactory(IElementFactoryGetArgsFactory&&) noexcept = default;
        IElementFactoryGetArgsFactory& operator=(IElementFactoryGetArgsFactory const&) & noexcept = default;
        IElementFactoryGetArgsFactory& operator=(IElementFactoryGetArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementFactoryRecycleArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementFactoryRecycleArgs>
    {
        IElementFactoryRecycleArgs(std::nullptr_t = nullptr) noexcept {}
        IElementFactoryRecycleArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementFactoryRecycleArgs(IElementFactoryRecycleArgs const&) noexcept = default;
        IElementFactoryRecycleArgs(IElementFactoryRecycleArgs&&) noexcept = default;
        IElementFactoryRecycleArgs& operator=(IElementFactoryRecycleArgs const&) & noexcept = default;
        IElementFactoryRecycleArgs& operator=(IElementFactoryRecycleArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementFactoryRecycleArgsFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementFactoryRecycleArgsFactory>
    {
        IElementFactoryRecycleArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IElementFactoryRecycleArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementFactoryRecycleArgsFactory(IElementFactoryRecycleArgsFactory const&) noexcept = default;
        IElementFactoryRecycleArgsFactory(IElementFactoryRecycleArgsFactory&&) noexcept = default;
        IElementFactoryRecycleArgsFactory& operator=(IElementFactoryRecycleArgsFactory const&) & noexcept = default;
        IElementFactoryRecycleArgsFactory& operator=(IElementFactoryRecycleArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementSoundPlayer :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementSoundPlayer>
    {
        IElementSoundPlayer(std::nullptr_t = nullptr) noexcept {}
        IElementSoundPlayer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementSoundPlayer(IElementSoundPlayer const&) noexcept = default;
        IElementSoundPlayer(IElementSoundPlayer&&) noexcept = default;
        IElementSoundPlayer& operator=(IElementSoundPlayer const&) & noexcept = default;
        IElementSoundPlayer& operator=(IElementSoundPlayer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementSoundPlayerStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementSoundPlayerStatics>
    {
        IElementSoundPlayerStatics(std::nullptr_t = nullptr) noexcept {}
        IElementSoundPlayerStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementSoundPlayerStatics(IElementSoundPlayerStatics const&) noexcept = default;
        IElementSoundPlayerStatics(IElementSoundPlayerStatics&&) noexcept = default;
        IElementSoundPlayerStatics& operator=(IElementSoundPlayerStatics const&) & noexcept = default;
        IElementSoundPlayerStatics& operator=(IElementSoundPlayerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElementSoundPlayerStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IElementSoundPlayerStatics2>
    {
        IElementSoundPlayerStatics2(std::nullptr_t = nullptr) noexcept {}
        IElementSoundPlayerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElementSoundPlayerStatics2(IElementSoundPlayerStatics2 const&) noexcept = default;
        IElementSoundPlayerStatics2(IElementSoundPlayerStatics2&&) noexcept = default;
        IElementSoundPlayerStatics2& operator=(IElementSoundPlayerStatics2 const&) & noexcept = default;
        IElementSoundPlayerStatics2& operator=(IElementSoundPlayerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEventTrigger :
        Windows::Foundation::IInspectable,
        impl::consume_t<IEventTrigger>
    {
        IEventTrigger(std::nullptr_t = nullptr) noexcept {}
        IEventTrigger(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEventTrigger(IEventTrigger const&) noexcept = default;
        IEventTrigger(IEventTrigger&&) noexcept = default;
        IEventTrigger& operator=(IEventTrigger const&) & noexcept = default;
        IEventTrigger& operator=(IEventTrigger&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExceptionRoutedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IExceptionRoutedEventArgs>
    {
        IExceptionRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExceptionRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExceptionRoutedEventArgs(IExceptionRoutedEventArgs const&) noexcept = default;
        IExceptionRoutedEventArgs(IExceptionRoutedEventArgs&&) noexcept = default;
        IExceptionRoutedEventArgs& operator=(IExceptionRoutedEventArgs const&) & noexcept = default;
        IExceptionRoutedEventArgs& operator=(IExceptionRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExceptionRoutedEventArgsFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IExceptionRoutedEventArgsFactory>
    {
        IExceptionRoutedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IExceptionRoutedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExceptionRoutedEventArgsFactory(IExceptionRoutedEventArgsFactory const&) noexcept = default;
        IExceptionRoutedEventArgsFactory(IExceptionRoutedEventArgsFactory&&) noexcept = default;
        IExceptionRoutedEventArgsFactory& operator=(IExceptionRoutedEventArgsFactory const&) & noexcept = default;
        IExceptionRoutedEventArgsFactory& operator=(IExceptionRoutedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement>
    {
        IFrameworkElement(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement(IFrameworkElement const&) noexcept = default;
        IFrameworkElement(IFrameworkElement&&) noexcept = default;
        IFrameworkElement& operator=(IFrameworkElement const&) & noexcept = default;
        IFrameworkElement& operator=(IFrameworkElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement2>
    {
        IFrameworkElement2(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement2(IFrameworkElement2 const&) noexcept = default;
        IFrameworkElement2(IFrameworkElement2&&) noexcept = default;
        IFrameworkElement2& operator=(IFrameworkElement2 const&) & noexcept = default;
        IFrameworkElement2& operator=(IFrameworkElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement3>
    {
        IFrameworkElement3(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement3(IFrameworkElement3 const&) noexcept = default;
        IFrameworkElement3(IFrameworkElement3&&) noexcept = default;
        IFrameworkElement3& operator=(IFrameworkElement3 const&) & noexcept = default;
        IFrameworkElement3& operator=(IFrameworkElement3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement4>
    {
        IFrameworkElement4(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement4(IFrameworkElement4 const&) noexcept = default;
        IFrameworkElement4(IFrameworkElement4&&) noexcept = default;
        IFrameworkElement4& operator=(IFrameworkElement4 const&) & noexcept = default;
        IFrameworkElement4& operator=(IFrameworkElement4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement6 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement6>
    {
        IFrameworkElement6(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement6(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement6(IFrameworkElement6 const&) noexcept = default;
        IFrameworkElement6(IFrameworkElement6&&) noexcept = default;
        IFrameworkElement6& operator=(IFrameworkElement6 const&) & noexcept = default;
        IFrameworkElement6& operator=(IFrameworkElement6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElement7 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElement7>
    {
        IFrameworkElement7(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElement7(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElement7(IFrameworkElement7 const&) noexcept = default;
        IFrameworkElement7(IFrameworkElement7&&) noexcept = default;
        IFrameworkElement7& operator=(IFrameworkElement7 const&) & noexcept = default;
        IFrameworkElement7& operator=(IFrameworkElement7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementFactory>
    {
        IFrameworkElementFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementFactory(IFrameworkElementFactory const&) noexcept = default;
        IFrameworkElementFactory(IFrameworkElementFactory&&) noexcept = default;
        IFrameworkElementFactory& operator=(IFrameworkElementFactory const&) & noexcept = default;
        IFrameworkElementFactory& operator=(IFrameworkElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementOverrides :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementOverrides>
    {
        IFrameworkElementOverrides(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementOverrides(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementOverrides(IFrameworkElementOverrides const&) noexcept = default;
        IFrameworkElementOverrides(IFrameworkElementOverrides&&) noexcept = default;
        IFrameworkElementOverrides& operator=(IFrameworkElementOverrides const&) & noexcept = default;
        IFrameworkElementOverrides& operator=(IFrameworkElementOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementOverrides2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementOverrides2>
    {
        IFrameworkElementOverrides2(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementOverrides2(IFrameworkElementOverrides2 const&) noexcept = default;
        IFrameworkElementOverrides2(IFrameworkElementOverrides2&&) noexcept = default;
        IFrameworkElementOverrides2& operator=(IFrameworkElementOverrides2 const&) & noexcept = default;
        IFrameworkElementOverrides2& operator=(IFrameworkElementOverrides2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementProtected7 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementProtected7>
    {
        IFrameworkElementProtected7(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementProtected7(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementProtected7(IFrameworkElementProtected7 const&) noexcept = default;
        IFrameworkElementProtected7(IFrameworkElementProtected7&&) noexcept = default;
        IFrameworkElementProtected7& operator=(IFrameworkElementProtected7 const&) & noexcept = default;
        IFrameworkElementProtected7& operator=(IFrameworkElementProtected7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementStatics>
    {
        IFrameworkElementStatics(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementStatics(IFrameworkElementStatics const&) noexcept = default;
        IFrameworkElementStatics(IFrameworkElementStatics&&) noexcept = default;
        IFrameworkElementStatics& operator=(IFrameworkElementStatics const&) & noexcept = default;
        IFrameworkElementStatics& operator=(IFrameworkElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementStatics2>
    {
        IFrameworkElementStatics2(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementStatics2(IFrameworkElementStatics2 const&) noexcept = default;
        IFrameworkElementStatics2(IFrameworkElementStatics2&&) noexcept = default;
        IFrameworkElementStatics2& operator=(IFrameworkElementStatics2 const&) & noexcept = default;
        IFrameworkElementStatics2& operator=(IFrameworkElementStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementStatics4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementStatics4>
    {
        IFrameworkElementStatics4(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementStatics4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementStatics4(IFrameworkElementStatics4 const&) noexcept = default;
        IFrameworkElementStatics4(IFrameworkElementStatics4&&) noexcept = default;
        IFrameworkElementStatics4& operator=(IFrameworkElementStatics4 const&) & noexcept = default;
        IFrameworkElementStatics4& operator=(IFrameworkElementStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementStatics5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementStatics5>
    {
        IFrameworkElementStatics5(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementStatics5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementStatics5(IFrameworkElementStatics5 const&) noexcept = default;
        IFrameworkElementStatics5(IFrameworkElementStatics5&&) noexcept = default;
        IFrameworkElementStatics5& operator=(IFrameworkElementStatics5 const&) & noexcept = default;
        IFrameworkElementStatics5& operator=(IFrameworkElementStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementStatics6 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementStatics6>
    {
        IFrameworkElementStatics6(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementStatics6(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementStatics6(IFrameworkElementStatics6 const&) noexcept = default;
        IFrameworkElementStatics6(IFrameworkElementStatics6&&) noexcept = default;
        IFrameworkElementStatics6& operator=(IFrameworkElementStatics6 const&) & noexcept = default;
        IFrameworkElementStatics6& operator=(IFrameworkElementStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkTemplate :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkTemplate>
    {
        IFrameworkTemplate(std::nullptr_t = nullptr) noexcept {}
        IFrameworkTemplate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkTemplate(IFrameworkTemplate const&) noexcept = default;
        IFrameworkTemplate(IFrameworkTemplate&&) noexcept = default;
        IFrameworkTemplate& operator=(IFrameworkTemplate const&) & noexcept = default;
        IFrameworkTemplate& operator=(IFrameworkTemplate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkTemplateFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkTemplateFactory>
    {
        IFrameworkTemplateFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameworkTemplateFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkTemplateFactory(IFrameworkTemplateFactory const&) noexcept = default;
        IFrameworkTemplateFactory(IFrameworkTemplateFactory&&) noexcept = default;
        IFrameworkTemplateFactory& operator=(IFrameworkTemplateFactory const&) & noexcept = default;
        IFrameworkTemplateFactory& operator=(IFrameworkTemplateFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkView :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkView>
    {
        IFrameworkView(std::nullptr_t = nullptr) noexcept {}
        IFrameworkView(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkView(IFrameworkView const&) noexcept = default;
        IFrameworkView(IFrameworkView&&) noexcept = default;
        IFrameworkView& operator=(IFrameworkView const&) & noexcept = default;
        IFrameworkView& operator=(IFrameworkView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkViewSource :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkViewSource>
    {
        IFrameworkViewSource(std::nullptr_t = nullptr) noexcept {}
        IFrameworkViewSource(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkViewSource(IFrameworkViewSource const&) noexcept = default;
        IFrameworkViewSource(IFrameworkViewSource&&) noexcept = default;
        IFrameworkViewSource& operator=(IFrameworkViewSource const&) & noexcept = default;
        IFrameworkViewSource& operator=(IFrameworkViewSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridLengthHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGridLengthHelper>
    {
        IGridLengthHelper(std::nullptr_t = nullptr) noexcept {}
        IGridLengthHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridLengthHelper(IGridLengthHelper const&) noexcept = default;
        IGridLengthHelper(IGridLengthHelper&&) noexcept = default;
        IGridLengthHelper& operator=(IGridLengthHelper const&) & noexcept = default;
        IGridLengthHelper& operator=(IGridLengthHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridLengthHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IGridLengthHelperStatics>
    {
        IGridLengthHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IGridLengthHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridLengthHelperStatics(IGridLengthHelperStatics const&) noexcept = default;
        IGridLengthHelperStatics(IGridLengthHelperStatics&&) noexcept = default;
        IGridLengthHelperStatics& operator=(IGridLengthHelperStatics const&) & noexcept = default;
        IGridLengthHelperStatics& operator=(IGridLengthHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaFailedRoutedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaFailedRoutedEventArgs>
    {
        IMediaFailedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaFailedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaFailedRoutedEventArgs(IMediaFailedRoutedEventArgs const&) noexcept = default;
        IMediaFailedRoutedEventArgs(IMediaFailedRoutedEventArgs&&) noexcept = default;
        IMediaFailedRoutedEventArgs& operator=(IMediaFailedRoutedEventArgs const&) & noexcept = default;
        IMediaFailedRoutedEventArgs& operator=(IMediaFailedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPointHelper>
    {
        IPointHelper(std::nullptr_t = nullptr) noexcept {}
        IPointHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointHelper(IPointHelper const&) noexcept = default;
        IPointHelper(IPointHelper&&) noexcept = default;
        IPointHelper& operator=(IPointHelper const&) & noexcept = default;
        IPointHelper& operator=(IPointHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPointHelperStatics>
    {
        IPointHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IPointHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointHelperStatics(IPointHelperStatics const&) noexcept = default;
        IPointHelperStatics(IPointHelperStatics&&) noexcept = default;
        IPointHelperStatics& operator=(IPointHelperStatics const&) & noexcept = default;
        IPointHelperStatics& operator=(IPointHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPropertyMetadata :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyMetadata>
    {
        IPropertyMetadata(std::nullptr_t = nullptr) noexcept {}
        IPropertyMetadata(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPropertyMetadata(IPropertyMetadata const&) noexcept = default;
        IPropertyMetadata(IPropertyMetadata&&) noexcept = default;
        IPropertyMetadata& operator=(IPropertyMetadata const&) & noexcept = default;
        IPropertyMetadata& operator=(IPropertyMetadata&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPropertyMetadataFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyMetadataFactory>
    {
        IPropertyMetadataFactory(std::nullptr_t = nullptr) noexcept {}
        IPropertyMetadataFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPropertyMetadataFactory(IPropertyMetadataFactory const&) noexcept = default;
        IPropertyMetadataFactory(IPropertyMetadataFactory&&) noexcept = default;
        IPropertyMetadataFactory& operator=(IPropertyMetadataFactory const&) & noexcept = default;
        IPropertyMetadataFactory& operator=(IPropertyMetadataFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPropertyMetadataStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyMetadataStatics>
    {
        IPropertyMetadataStatics(std::nullptr_t = nullptr) noexcept {}
        IPropertyMetadataStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPropertyMetadataStatics(IPropertyMetadataStatics const&) noexcept = default;
        IPropertyMetadataStatics(IPropertyMetadataStatics&&) noexcept = default;
        IPropertyMetadataStatics& operator=(IPropertyMetadataStatics const&) & noexcept = default;
        IPropertyMetadataStatics& operator=(IPropertyMetadataStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPropertyPath :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyPath>
    {
        IPropertyPath(std::nullptr_t = nullptr) noexcept {}
        IPropertyPath(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPropertyPath(IPropertyPath const&) noexcept = default;
        IPropertyPath(IPropertyPath&&) noexcept = default;
        IPropertyPath& operator=(IPropertyPath const&) & noexcept = default;
        IPropertyPath& operator=(IPropertyPath&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPropertyPathFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyPathFactory>
    {
        IPropertyPathFactory(std::nullptr_t = nullptr) noexcept {}
        IPropertyPathFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPropertyPathFactory(IPropertyPathFactory const&) noexcept = default;
        IPropertyPathFactory(IPropertyPathFactory&&) noexcept = default;
        IPropertyPathFactory& operator=(IPropertyPathFactory const&) & noexcept = default;
        IPropertyPathFactory& operator=(IPropertyPathFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRectHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRectHelper>
    {
        IRectHelper(std::nullptr_t = nullptr) noexcept {}
        IRectHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRectHelper(IRectHelper const&) noexcept = default;
        IRectHelper(IRectHelper&&) noexcept = default;
        IRectHelper& operator=(IRectHelper const&) & noexcept = default;
        IRectHelper& operator=(IRectHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRectHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRectHelperStatics>
    {
        IRectHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IRectHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRectHelperStatics(IRectHelperStatics const&) noexcept = default;
        IRectHelperStatics(IRectHelperStatics&&) noexcept = default;
        IRectHelperStatics& operator=(IRectHelperStatics const&) & noexcept = default;
        IRectHelperStatics& operator=(IRectHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceDictionary :
        Windows::Foundation::IInspectable,
        impl::consume_t<IResourceDictionary>
    {
        IResourceDictionary(std::nullptr_t = nullptr) noexcept {}
        IResourceDictionary(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceDictionary(IResourceDictionary const&) noexcept = default;
        IResourceDictionary(IResourceDictionary&&) noexcept = default;
        IResourceDictionary& operator=(IResourceDictionary const&) & noexcept = default;
        IResourceDictionary& operator=(IResourceDictionary&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceDictionaryFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IResourceDictionaryFactory>
    {
        IResourceDictionaryFactory(std::nullptr_t = nullptr) noexcept {}
        IResourceDictionaryFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceDictionaryFactory(IResourceDictionaryFactory const&) noexcept = default;
        IResourceDictionaryFactory(IResourceDictionaryFactory&&) noexcept = default;
        IResourceDictionaryFactory& operator=(IResourceDictionaryFactory const&) & noexcept = default;
        IResourceDictionaryFactory& operator=(IResourceDictionaryFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRoutedEvent :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRoutedEvent>
    {
        IRoutedEvent(std::nullptr_t = nullptr) noexcept {}
        IRoutedEvent(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRoutedEvent(IRoutedEvent const&) noexcept = default;
        IRoutedEvent(IRoutedEvent&&) noexcept = default;
        IRoutedEvent& operator=(IRoutedEvent const&) & noexcept = default;
        IRoutedEvent& operator=(IRoutedEvent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRoutedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRoutedEventArgs>
    {
        IRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRoutedEventArgs(IRoutedEventArgs const&) noexcept = default;
        IRoutedEventArgs(IRoutedEventArgs&&) noexcept = default;
        IRoutedEventArgs& operator=(IRoutedEventArgs const&) & noexcept = default;
        IRoutedEventArgs& operator=(IRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRoutedEventArgsFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRoutedEventArgsFactory>
    {
        IRoutedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IRoutedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRoutedEventArgsFactory(IRoutedEventArgsFactory const&) noexcept = default;
        IRoutedEventArgsFactory(IRoutedEventArgsFactory&&) noexcept = default;
        IRoutedEventArgsFactory& operator=(IRoutedEventArgsFactory const&) & noexcept = default;
        IRoutedEventArgsFactory& operator=(IRoutedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScalarTransition :
        Windows::Foundation::IInspectable,
        impl::consume_t<IScalarTransition>
    {
        IScalarTransition(std::nullptr_t = nullptr) noexcept {}
        IScalarTransition(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScalarTransition(IScalarTransition const&) noexcept = default;
        IScalarTransition(IScalarTransition&&) noexcept = default;
        IScalarTransition& operator=(IScalarTransition const&) & noexcept = default;
        IScalarTransition& operator=(IScalarTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScalarTransitionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IScalarTransitionFactory>
    {
        IScalarTransitionFactory(std::nullptr_t = nullptr) noexcept {}
        IScalarTransitionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScalarTransitionFactory(IScalarTransitionFactory const&) noexcept = default;
        IScalarTransitionFactory(IScalarTransitionFactory&&) noexcept = default;
        IScalarTransitionFactory& operator=(IScalarTransitionFactory const&) & noexcept = default;
        IScalarTransitionFactory& operator=(IScalarTransitionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetter :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetter>
    {
        ISetter(std::nullptr_t = nullptr) noexcept {}
        ISetter(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetter(ISetter const&) noexcept = default;
        ISetter(ISetter&&) noexcept = default;
        ISetter& operator=(ISetter const&) & noexcept = default;
        ISetter& operator=(ISetter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetter2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetter2>
    {
        ISetter2(std::nullptr_t = nullptr) noexcept {}
        ISetter2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetter2(ISetter2 const&) noexcept = default;
        ISetter2(ISetter2&&) noexcept = default;
        ISetter2& operator=(ISetter2 const&) & noexcept = default;
        ISetter2& operator=(ISetter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetterBase :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetterBase>
    {
        ISetterBase(std::nullptr_t = nullptr) noexcept {}
        ISetterBase(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetterBase(ISetterBase const&) noexcept = default;
        ISetterBase(ISetterBase&&) noexcept = default;
        ISetterBase& operator=(ISetterBase const&) & noexcept = default;
        ISetterBase& operator=(ISetterBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetterBaseCollection :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetterBaseCollection>
    {
        ISetterBaseCollection(std::nullptr_t = nullptr) noexcept {}
        ISetterBaseCollection(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetterBaseCollection(ISetterBaseCollection const&) noexcept = default;
        ISetterBaseCollection(ISetterBaseCollection&&) noexcept = default;
        ISetterBaseCollection& operator=(ISetterBaseCollection const&) & noexcept = default;
        ISetterBaseCollection& operator=(ISetterBaseCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetterBaseFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetterBaseFactory>
    {
        ISetterBaseFactory(std::nullptr_t = nullptr) noexcept {}
        ISetterBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetterBaseFactory(ISetterBaseFactory const&) noexcept = default;
        ISetterBaseFactory(ISetterBaseFactory&&) noexcept = default;
        ISetterBaseFactory& operator=(ISetterBaseFactory const&) & noexcept = default;
        ISetterBaseFactory& operator=(ISetterBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISetterFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISetterFactory>
    {
        ISetterFactory(std::nullptr_t = nullptr) noexcept {}
        ISetterFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISetterFactory(ISetterFactory const&) noexcept = default;
        ISetterFactory(ISetterFactory&&) noexcept = default;
        ISetterFactory& operator=(ISetterFactory const&) & noexcept = default;
        ISetterFactory& operator=(ISetterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISizeChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISizeChangedEventArgs>
    {
        ISizeChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISizeChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISizeChangedEventArgs(ISizeChangedEventArgs const&) noexcept = default;
        ISizeChangedEventArgs(ISizeChangedEventArgs&&) noexcept = default;
        ISizeChangedEventArgs& operator=(ISizeChangedEventArgs const&) & noexcept = default;
        ISizeChangedEventArgs& operator=(ISizeChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISizeHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISizeHelper>
    {
        ISizeHelper(std::nullptr_t = nullptr) noexcept {}
        ISizeHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISizeHelper(ISizeHelper const&) noexcept = default;
        ISizeHelper(ISizeHelper&&) noexcept = default;
        ISizeHelper& operator=(ISizeHelper const&) & noexcept = default;
        ISizeHelper& operator=(ISizeHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISizeHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISizeHelperStatics>
    {
        ISizeHelperStatics(std::nullptr_t = nullptr) noexcept {}
        ISizeHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISizeHelperStatics(ISizeHelperStatics const&) noexcept = default;
        ISizeHelperStatics(ISizeHelperStatics&&) noexcept = default;
        ISizeHelperStatics& operator=(ISizeHelperStatics const&) & noexcept = default;
        ISizeHelperStatics& operator=(ISizeHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStateTrigger :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStateTrigger>
    {
        IStateTrigger(std::nullptr_t = nullptr) noexcept {}
        IStateTrigger(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStateTrigger(IStateTrigger const&) noexcept = default;
        IStateTrigger(IStateTrigger&&) noexcept = default;
        IStateTrigger& operator=(IStateTrigger const&) & noexcept = default;
        IStateTrigger& operator=(IStateTrigger&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStateTriggerBase :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStateTriggerBase>
    {
        IStateTriggerBase(std::nullptr_t = nullptr) noexcept {}
        IStateTriggerBase(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStateTriggerBase(IStateTriggerBase const&) noexcept = default;
        IStateTriggerBase(IStateTriggerBase&&) noexcept = default;
        IStateTriggerBase& operator=(IStateTriggerBase const&) & noexcept = default;
        IStateTriggerBase& operator=(IStateTriggerBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStateTriggerBaseFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStateTriggerBaseFactory>
    {
        IStateTriggerBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IStateTriggerBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStateTriggerBaseFactory(IStateTriggerBaseFactory const&) noexcept = default;
        IStateTriggerBaseFactory(IStateTriggerBaseFactory&&) noexcept = default;
        IStateTriggerBaseFactory& operator=(IStateTriggerBaseFactory const&) & noexcept = default;
        IStateTriggerBaseFactory& operator=(IStateTriggerBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStateTriggerBaseProtected :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStateTriggerBaseProtected>
    {
        IStateTriggerBaseProtected(std::nullptr_t = nullptr) noexcept {}
        IStateTriggerBaseProtected(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStateTriggerBaseProtected(IStateTriggerBaseProtected const&) noexcept = default;
        IStateTriggerBaseProtected(IStateTriggerBaseProtected&&) noexcept = default;
        IStateTriggerBaseProtected& operator=(IStateTriggerBaseProtected const&) & noexcept = default;
        IStateTriggerBaseProtected& operator=(IStateTriggerBaseProtected&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStateTriggerStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStateTriggerStatics>
    {
        IStateTriggerStatics(std::nullptr_t = nullptr) noexcept {}
        IStateTriggerStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStateTriggerStatics(IStateTriggerStatics const&) noexcept = default;
        IStateTriggerStatics(IStateTriggerStatics&&) noexcept = default;
        IStateTriggerStatics& operator=(IStateTriggerStatics const&) & noexcept = default;
        IStateTriggerStatics& operator=(IStateTriggerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStyle :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStyle>
    {
        IStyle(std::nullptr_t = nullptr) noexcept {}
        IStyle(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStyle(IStyle const&) noexcept = default;
        IStyle(IStyle&&) noexcept = default;
        IStyle& operator=(IStyle const&) & noexcept = default;
        IStyle& operator=(IStyle&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStyleFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IStyleFactory>
    {
        IStyleFactory(std::nullptr_t = nullptr) noexcept {}
        IStyleFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStyleFactory(IStyleFactory const&) noexcept = default;
        IStyleFactory(IStyleFactory&&) noexcept = default;
        IStyleFactory& operator=(IStyleFactory const&) & noexcept = default;
        IStyleFactory& operator=(IStyleFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITargetPropertyPath :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITargetPropertyPath>
    {
        ITargetPropertyPath(std::nullptr_t = nullptr) noexcept {}
        ITargetPropertyPath(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITargetPropertyPath(ITargetPropertyPath const&) noexcept = default;
        ITargetPropertyPath(ITargetPropertyPath&&) noexcept = default;
        ITargetPropertyPath& operator=(ITargetPropertyPath const&) & noexcept = default;
        ITargetPropertyPath& operator=(ITargetPropertyPath&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITargetPropertyPathFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITargetPropertyPathFactory>
    {
        ITargetPropertyPathFactory(std::nullptr_t = nullptr) noexcept {}
        ITargetPropertyPathFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITargetPropertyPathFactory(ITargetPropertyPathFactory const&) noexcept = default;
        ITargetPropertyPathFactory(ITargetPropertyPathFactory&&) noexcept = default;
        ITargetPropertyPathFactory& operator=(ITargetPropertyPathFactory const&) & noexcept = default;
        ITargetPropertyPathFactory& operator=(ITargetPropertyPathFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThicknessHelper :
        Windows::Foundation::IInspectable,
        impl::consume_t<IThicknessHelper>
    {
        IThicknessHelper(std::nullptr_t = nullptr) noexcept {}
        IThicknessHelper(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThicknessHelper(IThicknessHelper const&) noexcept = default;
        IThicknessHelper(IThicknessHelper&&) noexcept = default;
        IThicknessHelper& operator=(IThicknessHelper const&) & noexcept = default;
        IThicknessHelper& operator=(IThicknessHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThicknessHelperStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IThicknessHelperStatics>
    {
        IThicknessHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IThicknessHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThicknessHelperStatics(IThicknessHelperStatics const&) noexcept = default;
        IThicknessHelperStatics(IThicknessHelperStatics&&) noexcept = default;
        IThicknessHelperStatics& operator=(IThicknessHelperStatics const&) & noexcept = default;
        IThicknessHelperStatics& operator=(IThicknessHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITriggerAction :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITriggerAction>
    {
        ITriggerAction(std::nullptr_t = nullptr) noexcept {}
        ITriggerAction(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITriggerAction(ITriggerAction const&) noexcept = default;
        ITriggerAction(ITriggerAction&&) noexcept = default;
        ITriggerAction& operator=(ITriggerAction const&) & noexcept = default;
        ITriggerAction& operator=(ITriggerAction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITriggerActionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITriggerActionFactory>
    {
        ITriggerActionFactory(std::nullptr_t = nullptr) noexcept {}
        ITriggerActionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITriggerActionFactory(ITriggerActionFactory const&) noexcept = default;
        ITriggerActionFactory(ITriggerActionFactory&&) noexcept = default;
        ITriggerActionFactory& operator=(ITriggerActionFactory const&) & noexcept = default;
        ITriggerActionFactory& operator=(ITriggerActionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITriggerBase :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITriggerBase>
    {
        ITriggerBase(std::nullptr_t = nullptr) noexcept {}
        ITriggerBase(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITriggerBase(ITriggerBase const&) noexcept = default;
        ITriggerBase(ITriggerBase&&) noexcept = default;
        ITriggerBase& operator=(ITriggerBase const&) & noexcept = default;
        ITriggerBase& operator=(ITriggerBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITriggerBaseFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITriggerBaseFactory>
    {
        ITriggerBaseFactory(std::nullptr_t = nullptr) noexcept {}
        ITriggerBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITriggerBaseFactory(ITriggerBaseFactory const&) noexcept = default;
        ITriggerBaseFactory(ITriggerBaseFactory&&) noexcept = default;
        ITriggerBaseFactory& operator=(ITriggerBaseFactory const&) & noexcept = default;
        ITriggerBaseFactory& operator=(ITriggerBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement>
    {
        IUIElement(std::nullptr_t = nullptr) noexcept {}
        IUIElement(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement(IUIElement const&) noexcept = default;
        IUIElement(IUIElement&&) noexcept = default;
        IUIElement& operator=(IUIElement const&) & noexcept = default;
        IUIElement& operator=(IUIElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement10 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement10>
    {
        IUIElement10(std::nullptr_t = nullptr) noexcept {}
        IUIElement10(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement10(IUIElement10 const&) noexcept = default;
        IUIElement10(IUIElement10&&) noexcept = default;
        IUIElement10& operator=(IUIElement10 const&) & noexcept = default;
        IUIElement10& operator=(IUIElement10&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement2>
    {
        IUIElement2(std::nullptr_t = nullptr) noexcept {}
        IUIElement2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement2(IUIElement2 const&) noexcept = default;
        IUIElement2(IUIElement2&&) noexcept = default;
        IUIElement2& operator=(IUIElement2 const&) & noexcept = default;
        IUIElement2& operator=(IUIElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement3>
    {
        IUIElement3(std::nullptr_t = nullptr) noexcept {}
        IUIElement3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement3(IUIElement3 const&) noexcept = default;
        IUIElement3(IUIElement3&&) noexcept = default;
        IUIElement3& operator=(IUIElement3 const&) & noexcept = default;
        IUIElement3& operator=(IUIElement3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement4>
    {
        IUIElement4(std::nullptr_t = nullptr) noexcept {}
        IUIElement4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement4(IUIElement4 const&) noexcept = default;
        IUIElement4(IUIElement4&&) noexcept = default;
        IUIElement4& operator=(IUIElement4 const&) & noexcept = default;
        IUIElement4& operator=(IUIElement4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement5>
    {
        IUIElement5(std::nullptr_t = nullptr) noexcept {}
        IUIElement5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement5(IUIElement5 const&) noexcept = default;
        IUIElement5(IUIElement5&&) noexcept = default;
        IUIElement5& operator=(IUIElement5 const&) & noexcept = default;
        IUIElement5& operator=(IUIElement5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement7 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement7>
    {
        IUIElement7(std::nullptr_t = nullptr) noexcept {}
        IUIElement7(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement7(IUIElement7 const&) noexcept = default;
        IUIElement7(IUIElement7&&) noexcept = default;
        IUIElement7& operator=(IUIElement7 const&) & noexcept = default;
        IUIElement7& operator=(IUIElement7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement8 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement8>
    {
        IUIElement8(std::nullptr_t = nullptr) noexcept {}
        IUIElement8(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement8(IUIElement8 const&) noexcept = default;
        IUIElement8(IUIElement8&&) noexcept = default;
        IUIElement8& operator=(IUIElement8 const&) & noexcept = default;
        IUIElement8& operator=(IUIElement8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElement9 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElement9>
    {
        IUIElement9(std::nullptr_t = nullptr) noexcept {}
        IUIElement9(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElement9(IUIElement9 const&) noexcept = default;
        IUIElement9(IUIElement9&&) noexcept = default;
        IUIElement9& operator=(IUIElement9 const&) & noexcept = default;
        IUIElement9& operator=(IUIElement9&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementFactory>
    {
        IUIElementFactory(std::nullptr_t = nullptr) noexcept {}
        IUIElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementFactory(IUIElementFactory const&) noexcept = default;
        IUIElementFactory(IUIElementFactory&&) noexcept = default;
        IUIElementFactory& operator=(IUIElementFactory const&) & noexcept = default;
        IUIElementFactory& operator=(IUIElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementOverrides :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementOverrides>
    {
        IUIElementOverrides(std::nullptr_t = nullptr) noexcept {}
        IUIElementOverrides(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementOverrides(IUIElementOverrides const&) noexcept = default;
        IUIElementOverrides(IUIElementOverrides&&) noexcept = default;
        IUIElementOverrides& operator=(IUIElementOverrides const&) & noexcept = default;
        IUIElementOverrides& operator=(IUIElementOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementOverrides7 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementOverrides7>
    {
        IUIElementOverrides7(std::nullptr_t = nullptr) noexcept {}
        IUIElementOverrides7(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementOverrides7(IUIElementOverrides7 const&) noexcept = default;
        IUIElementOverrides7(IUIElementOverrides7&&) noexcept = default;
        IUIElementOverrides7& operator=(IUIElementOverrides7 const&) & noexcept = default;
        IUIElementOverrides7& operator=(IUIElementOverrides7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementOverrides8 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementOverrides8>
    {
        IUIElementOverrides8(std::nullptr_t = nullptr) noexcept {}
        IUIElementOverrides8(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementOverrides8(IUIElementOverrides8 const&) noexcept = default;
        IUIElementOverrides8(IUIElementOverrides8&&) noexcept = default;
        IUIElementOverrides8& operator=(IUIElementOverrides8 const&) & noexcept = default;
        IUIElementOverrides8& operator=(IUIElementOverrides8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementOverrides9 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementOverrides9>
    {
        IUIElementOverrides9(std::nullptr_t = nullptr) noexcept {}
        IUIElementOverrides9(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementOverrides9(IUIElementOverrides9 const&) noexcept = default;
        IUIElementOverrides9(IUIElementOverrides9&&) noexcept = default;
        IUIElementOverrides9& operator=(IUIElementOverrides9 const&) & noexcept = default;
        IUIElementOverrides9& operator=(IUIElementOverrides9&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics>
    {
        IUIElementStatics(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics(IUIElementStatics const&) noexcept = default;
        IUIElementStatics(IUIElementStatics&&) noexcept = default;
        IUIElementStatics& operator=(IUIElementStatics const&) & noexcept = default;
        IUIElementStatics& operator=(IUIElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics10 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics10>
    {
        IUIElementStatics10(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics10(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics10(IUIElementStatics10 const&) noexcept = default;
        IUIElementStatics10(IUIElementStatics10&&) noexcept = default;
        IUIElementStatics10& operator=(IUIElementStatics10 const&) & noexcept = default;
        IUIElementStatics10& operator=(IUIElementStatics10&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics2>
    {
        IUIElementStatics2(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics2(IUIElementStatics2 const&) noexcept = default;
        IUIElementStatics2(IUIElementStatics2&&) noexcept = default;
        IUIElementStatics2& operator=(IUIElementStatics2 const&) & noexcept = default;
        IUIElementStatics2& operator=(IUIElementStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics3>
    {
        IUIElementStatics3(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics3(IUIElementStatics3 const&) noexcept = default;
        IUIElementStatics3(IUIElementStatics3&&) noexcept = default;
        IUIElementStatics3& operator=(IUIElementStatics3 const&) & noexcept = default;
        IUIElementStatics3& operator=(IUIElementStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics4>
    {
        IUIElementStatics4(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics4(IUIElementStatics4 const&) noexcept = default;
        IUIElementStatics4(IUIElementStatics4&&) noexcept = default;
        IUIElementStatics4& operator=(IUIElementStatics4 const&) & noexcept = default;
        IUIElementStatics4& operator=(IUIElementStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics5 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics5>
    {
        IUIElementStatics5(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics5(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics5(IUIElementStatics5 const&) noexcept = default;
        IUIElementStatics5(IUIElementStatics5&&) noexcept = default;
        IUIElementStatics5& operator=(IUIElementStatics5 const&) & noexcept = default;
        IUIElementStatics5& operator=(IUIElementStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics6 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics6>
    {
        IUIElementStatics6(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics6(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics6(IUIElementStatics6 const&) noexcept = default;
        IUIElementStatics6(IUIElementStatics6&&) noexcept = default;
        IUIElementStatics6& operator=(IUIElementStatics6 const&) & noexcept = default;
        IUIElementStatics6& operator=(IUIElementStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics7 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics7>
    {
        IUIElementStatics7(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics7(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics7(IUIElementStatics7 const&) noexcept = default;
        IUIElementStatics7(IUIElementStatics7&&) noexcept = default;
        IUIElementStatics7& operator=(IUIElementStatics7 const&) & noexcept = default;
        IUIElementStatics7& operator=(IUIElementStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics8 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics8>
    {
        IUIElementStatics8(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics8(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics8(IUIElementStatics8 const&) noexcept = default;
        IUIElementStatics8(IUIElementStatics8&&) noexcept = default;
        IUIElementStatics8& operator=(IUIElementStatics8 const&) & noexcept = default;
        IUIElementStatics8& operator=(IUIElementStatics8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementStatics9 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementStatics9>
    {
        IUIElementStatics9(std::nullptr_t = nullptr) noexcept {}
        IUIElementStatics9(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementStatics9(IUIElementStatics9 const&) noexcept = default;
        IUIElementStatics9(IUIElementStatics9&&) noexcept = default;
        IUIElementStatics9& operator=(IUIElementStatics9 const&) & noexcept = default;
        IUIElementStatics9& operator=(IUIElementStatics9&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementWeakCollection :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementWeakCollection>
    {
        IUIElementWeakCollection(std::nullptr_t = nullptr) noexcept {}
        IUIElementWeakCollection(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementWeakCollection(IUIElementWeakCollection const&) noexcept = default;
        IUIElementWeakCollection(IUIElementWeakCollection&&) noexcept = default;
        IUIElementWeakCollection& operator=(IUIElementWeakCollection const&) & noexcept = default;
        IUIElementWeakCollection& operator=(IUIElementWeakCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementWeakCollectionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementWeakCollectionFactory>
    {
        IUIElementWeakCollectionFactory(std::nullptr_t = nullptr) noexcept {}
        IUIElementWeakCollectionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementWeakCollectionFactory(IUIElementWeakCollectionFactory const&) noexcept = default;
        IUIElementWeakCollectionFactory(IUIElementWeakCollectionFactory&&) noexcept = default;
        IUIElementWeakCollectionFactory& operator=(IUIElementWeakCollectionFactory const&) & noexcept = default;
        IUIElementWeakCollectionFactory& operator=(IUIElementWeakCollectionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnhandledExceptionEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IUnhandledExceptionEventArgs>
    {
        IUnhandledExceptionEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUnhandledExceptionEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnhandledExceptionEventArgs(IUnhandledExceptionEventArgs const&) noexcept = default;
        IUnhandledExceptionEventArgs(IUnhandledExceptionEventArgs&&) noexcept = default;
        IUnhandledExceptionEventArgs& operator=(IUnhandledExceptionEventArgs const&) & noexcept = default;
        IUnhandledExceptionEventArgs& operator=(IUnhandledExceptionEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector3Transition :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVector3Transition>
    {
        IVector3Transition(std::nullptr_t = nullptr) noexcept {}
        IVector3Transition(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector3Transition(IVector3Transition const&) noexcept = default;
        IVector3Transition(IVector3Transition&&) noexcept = default;
        IVector3Transition& operator=(IVector3Transition const&) & noexcept = default;
        IVector3Transition& operator=(IVector3Transition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector3TransitionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVector3TransitionFactory>
    {
        IVector3TransitionFactory(std::nullptr_t = nullptr) noexcept {}
        IVector3TransitionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector3TransitionFactory(IVector3TransitionFactory const&) noexcept = default;
        IVector3TransitionFactory(IVector3TransitionFactory&&) noexcept = default;
        IVector3TransitionFactory& operator=(IVector3TransitionFactory const&) & noexcept = default;
        IVector3TransitionFactory& operator=(IVector3TransitionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualState :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualState>
    {
        IVisualState(std::nullptr_t = nullptr) noexcept {}
        IVisualState(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualState(IVisualState const&) noexcept = default;
        IVisualState(IVisualState&&) noexcept = default;
        IVisualState& operator=(IVisualState const&) & noexcept = default;
        IVisualState& operator=(IVisualState&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualState2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualState2>
    {
        IVisualState2(std::nullptr_t = nullptr) noexcept {}
        IVisualState2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualState2(IVisualState2 const&) noexcept = default;
        IVisualState2(IVisualState2&&) noexcept = default;
        IVisualState2& operator=(IVisualState2 const&) & noexcept = default;
        IVisualState2& operator=(IVisualState2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateChangedEventArgs>
    {
        IVisualStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IVisualStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateChangedEventArgs(IVisualStateChangedEventArgs const&) noexcept = default;
        IVisualStateChangedEventArgs(IVisualStateChangedEventArgs&&) noexcept = default;
        IVisualStateChangedEventArgs& operator=(IVisualStateChangedEventArgs const&) & noexcept = default;
        IVisualStateChangedEventArgs& operator=(IVisualStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateGroup :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateGroup>
    {
        IVisualStateGroup(std::nullptr_t = nullptr) noexcept {}
        IVisualStateGroup(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateGroup(IVisualStateGroup const&) noexcept = default;
        IVisualStateGroup(IVisualStateGroup&&) noexcept = default;
        IVisualStateGroup& operator=(IVisualStateGroup const&) & noexcept = default;
        IVisualStateGroup& operator=(IVisualStateGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateManager :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateManager>
    {
        IVisualStateManager(std::nullptr_t = nullptr) noexcept {}
        IVisualStateManager(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateManager(IVisualStateManager const&) noexcept = default;
        IVisualStateManager(IVisualStateManager&&) noexcept = default;
        IVisualStateManager& operator=(IVisualStateManager const&) & noexcept = default;
        IVisualStateManager& operator=(IVisualStateManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateManagerFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateManagerFactory>
    {
        IVisualStateManagerFactory(std::nullptr_t = nullptr) noexcept {}
        IVisualStateManagerFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateManagerFactory(IVisualStateManagerFactory const&) noexcept = default;
        IVisualStateManagerFactory(IVisualStateManagerFactory&&) noexcept = default;
        IVisualStateManagerFactory& operator=(IVisualStateManagerFactory const&) & noexcept = default;
        IVisualStateManagerFactory& operator=(IVisualStateManagerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateManagerOverrides :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateManagerOverrides>
    {
        IVisualStateManagerOverrides(std::nullptr_t = nullptr) noexcept {}
        IVisualStateManagerOverrides(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateManagerOverrides(IVisualStateManagerOverrides const&) noexcept = default;
        IVisualStateManagerOverrides(IVisualStateManagerOverrides&&) noexcept = default;
        IVisualStateManagerOverrides& operator=(IVisualStateManagerOverrides const&) & noexcept = default;
        IVisualStateManagerOverrides& operator=(IVisualStateManagerOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateManagerProtected :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateManagerProtected>
    {
        IVisualStateManagerProtected(std::nullptr_t = nullptr) noexcept {}
        IVisualStateManagerProtected(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateManagerProtected(IVisualStateManagerProtected const&) noexcept = default;
        IVisualStateManagerProtected(IVisualStateManagerProtected&&) noexcept = default;
        IVisualStateManagerProtected& operator=(IVisualStateManagerProtected const&) & noexcept = default;
        IVisualStateManagerProtected& operator=(IVisualStateManagerProtected&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualStateManagerStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualStateManagerStatics>
    {
        IVisualStateManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IVisualStateManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualStateManagerStatics(IVisualStateManagerStatics const&) noexcept = default;
        IVisualStateManagerStatics(IVisualStateManagerStatics&&) noexcept = default;
        IVisualStateManagerStatics& operator=(IVisualStateManagerStatics const&) & noexcept = default;
        IVisualStateManagerStatics& operator=(IVisualStateManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualTransition :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualTransition>
    {
        IVisualTransition(std::nullptr_t = nullptr) noexcept {}
        IVisualTransition(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualTransition(IVisualTransition const&) noexcept = default;
        IVisualTransition(IVisualTransition&&) noexcept = default;
        IVisualTransition& operator=(IVisualTransition const&) & noexcept = default;
        IVisualTransition& operator=(IVisualTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualTransitionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IVisualTransitionFactory>
    {
        IVisualTransitionFactory(std::nullptr_t = nullptr) noexcept {}
        IVisualTransitionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualTransitionFactory(IVisualTransitionFactory const&) noexcept = default;
        IVisualTransitionFactory(IVisualTransitionFactory&&) noexcept = default;
        IVisualTransitionFactory& operator=(IVisualTransitionFactory const&) & noexcept = default;
        IVisualTransitionFactory& operator=(IVisualTransitionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindow :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindow>
    {
        IWindow(std::nullptr_t = nullptr) noexcept {}
        IWindow(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindow(IWindow const&) noexcept = default;
        IWindow(IWindow&&) noexcept = default;
        IWindow& operator=(IWindow const&) & noexcept = default;
        IWindow& operator=(IWindow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindow2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindow2>
    {
        IWindow2(std::nullptr_t = nullptr) noexcept {}
        IWindow2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindow2(IWindow2 const&) noexcept = default;
        IWindow2(IWindow2&&) noexcept = default;
        IWindow2& operator=(IWindow2 const&) & noexcept = default;
        IWindow2& operator=(IWindow2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindow3 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindow3>
    {
        IWindow3(std::nullptr_t = nullptr) noexcept {}
        IWindow3(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindow3(IWindow3 const&) noexcept = default;
        IWindow3(IWindow3&&) noexcept = default;
        IWindow3& operator=(IWindow3 const&) & noexcept = default;
        IWindow3& operator=(IWindow3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindow4 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindow4>
    {
        IWindow4(std::nullptr_t = nullptr) noexcept {}
        IWindow4(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindow4(IWindow4 const&) noexcept = default;
        IWindow4(IWindow4&&) noexcept = default;
        IWindow4& operator=(IWindow4 const&) & noexcept = default;
        IWindow4& operator=(IWindow4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowCreatedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindowCreatedEventArgs>
    {
        IWindowCreatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowCreatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowCreatedEventArgs(IWindowCreatedEventArgs const&) noexcept = default;
        IWindowCreatedEventArgs(IWindowCreatedEventArgs&&) noexcept = default;
        IWindowCreatedEventArgs& operator=(IWindowCreatedEventArgs const&) & noexcept = default;
        IWindowCreatedEventArgs& operator=(IWindowCreatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IWindowStatics>
    {
        IWindowStatics(std::nullptr_t = nullptr) noexcept {}
        IWindowStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowStatics(IWindowStatics const&) noexcept = default;
        IWindowStatics(IWindowStatics&&) noexcept = default;
        IWindowStatics& operator=(IWindowStatics const&) & noexcept = default;
        IWindowStatics& operator=(IWindowStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlRoot :
        Windows::Foundation::IInspectable,
        impl::consume_t<IXamlRoot>
    {
        IXamlRoot(std::nullptr_t = nullptr) noexcept {}
        IXamlRoot(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlRoot(IXamlRoot const&) noexcept = default;
        IXamlRoot(IXamlRoot&&) noexcept = default;
        IXamlRoot& operator=(IXamlRoot const&) & noexcept = default;
        IXamlRoot& operator=(IXamlRoot&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlRootChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IXamlRootChangedEventArgs>
    {
        IXamlRootChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IXamlRootChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlRootChangedEventArgs(IXamlRootChangedEventArgs const&) noexcept = default;
        IXamlRootChangedEventArgs(IXamlRootChangedEventArgs&&) noexcept = default;
        IXamlRootChangedEventArgs& operator=(IXamlRootChangedEventArgs const&) & noexcept = default;
        IXamlRootChangedEventArgs& operator=(IXamlRootChangedEventArgs&&) & noexcept = default;
    };
}
#endif
