// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Windows_Devices_Input_1_H
#define WINRT_Windows_Devices_Input_1_H
#include "winrt/impl/Windows.Devices.Input.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Input
{
    struct __declspec(empty_bases) IKeyboardCapabilities :
        Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardCapabilities>
    {
        IKeyboardCapabilities(std::nullptr_t = nullptr) noexcept {}
        IKeyboardCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardCapabilities(IKeyboardCapabilities const&) noexcept = default;
        IKeyboardCapabilities(IKeyboardCapabilities&&) noexcept = default;
        IKeyboardCapabilities& operator=(IKeyboardCapabilities const&) & noexcept = default;
        IKeyboardCapabilities& operator=(IKeyboardCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMouseCapabilities :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMouseCapabilities>
    {
        IMouseCapabilities(std::nullptr_t = nullptr) noexcept {}
        IMouseCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMouseCapabilities(IMouseCapabilities const&) noexcept = default;
        IMouseCapabilities(IMouseCapabilities&&) noexcept = default;
        IMouseCapabilities& operator=(IMouseCapabilities const&) & noexcept = default;
        IMouseCapabilities& operator=(IMouseCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMouseDevice :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMouseDevice>
    {
        IMouseDevice(std::nullptr_t = nullptr) noexcept {}
        IMouseDevice(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMouseDevice(IMouseDevice const&) noexcept = default;
        IMouseDevice(IMouseDevice&&) noexcept = default;
        IMouseDevice& operator=(IMouseDevice const&) & noexcept = default;
        IMouseDevice& operator=(IMouseDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMouseDeviceStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMouseDeviceStatics>
    {
        IMouseDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        IMouseDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMouseDeviceStatics(IMouseDeviceStatics const&) noexcept = default;
        IMouseDeviceStatics(IMouseDeviceStatics&&) noexcept = default;
        IMouseDeviceStatics& operator=(IMouseDeviceStatics const&) & noexcept = default;
        IMouseDeviceStatics& operator=(IMouseDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMouseEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMouseEventArgs>
    {
        IMouseEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMouseEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMouseEventArgs(IMouseEventArgs const&) noexcept = default;
        IMouseEventArgs(IMouseEventArgs&&) noexcept = default;
        IMouseEventArgs& operator=(IMouseEventArgs const&) & noexcept = default;
        IMouseEventArgs& operator=(IMouseEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPenDevice :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPenDevice>
    {
        IPenDevice(std::nullptr_t = nullptr) noexcept {}
        IPenDevice(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPenDevice(IPenDevice const&) noexcept = default;
        IPenDevice(IPenDevice&&) noexcept = default;
        IPenDevice& operator=(IPenDevice const&) & noexcept = default;
        IPenDevice& operator=(IPenDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPenDeviceStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPenDeviceStatics>
    {
        IPenDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        IPenDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPenDeviceStatics(IPenDeviceStatics const&) noexcept = default;
        IPenDeviceStatics(IPenDeviceStatics&&) noexcept = default;
        IPenDeviceStatics& operator=(IPenDeviceStatics const&) & noexcept = default;
        IPenDeviceStatics& operator=(IPenDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerDevice :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPointerDevice>
    {
        IPointerDevice(std::nullptr_t = nullptr) noexcept {}
        IPointerDevice(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerDevice(IPointerDevice const&) noexcept = default;
        IPointerDevice(IPointerDevice&&) noexcept = default;
        IPointerDevice& operator=(IPointerDevice const&) & noexcept = default;
        IPointerDevice& operator=(IPointerDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerDevice2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPointerDevice2>
    {
        IPointerDevice2(std::nullptr_t = nullptr) noexcept {}
        IPointerDevice2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerDevice2(IPointerDevice2 const&) noexcept = default;
        IPointerDevice2(IPointerDevice2&&) noexcept = default;
        IPointerDevice2& operator=(IPointerDevice2 const&) & noexcept = default;
        IPointerDevice2& operator=(IPointerDevice2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerDeviceStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IPointerDeviceStatics>
    {
        IPointerDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerDeviceStatics(IPointerDeviceStatics const&) noexcept = default;
        IPointerDeviceStatics(IPointerDeviceStatics&&) noexcept = default;
        IPointerDeviceStatics& operator=(IPointerDeviceStatics const&) & noexcept = default;
        IPointerDeviceStatics& operator=(IPointerDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITouchCapabilities :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITouchCapabilities>
    {
        ITouchCapabilities(std::nullptr_t = nullptr) noexcept {}
        ITouchCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITouchCapabilities(ITouchCapabilities const&) noexcept = default;
        ITouchCapabilities(ITouchCapabilities&&) noexcept = default;
        ITouchCapabilities& operator=(ITouchCapabilities const&) & noexcept = default;
        ITouchCapabilities& operator=(ITouchCapabilities&&) & noexcept = default;
    };
}
#endif
