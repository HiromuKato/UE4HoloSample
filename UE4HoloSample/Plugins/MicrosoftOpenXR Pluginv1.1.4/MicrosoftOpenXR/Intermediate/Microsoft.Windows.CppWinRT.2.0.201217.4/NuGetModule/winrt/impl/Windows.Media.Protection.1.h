// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Windows_Media_Protection_1_H
#define WINRT_Windows_Media_Protection_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.Media.Protection.0.h"
WINRT_EXPORT namespace winrt::Windows::Media::Protection
{
    struct __declspec(empty_bases) IComponentLoadFailedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IComponentLoadFailedEventArgs>
    {
        IComponentLoadFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IComponentLoadFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComponentLoadFailedEventArgs(IComponentLoadFailedEventArgs const&) noexcept = default;
        IComponentLoadFailedEventArgs(IComponentLoadFailedEventArgs&&) noexcept = default;
        IComponentLoadFailedEventArgs& operator=(IComponentLoadFailedEventArgs const&) & noexcept = default;
        IComponentLoadFailedEventArgs& operator=(IComponentLoadFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHdcpSession :
        Windows::Foundation::IInspectable,
        impl::consume_t<IHdcpSession>,
        impl::require<Windows::Media::Protection::IHdcpSession, Windows::Foundation::IClosable>
    {
        IHdcpSession(std::nullptr_t = nullptr) noexcept {}
        IHdcpSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHdcpSession(IHdcpSession const&) noexcept = default;
        IHdcpSession(IHdcpSession&&) noexcept = default;
        IHdcpSession& operator=(IHdcpSession const&) & noexcept = default;
        IHdcpSession& operator=(IHdcpSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaProtectionManager :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaProtectionManager>
    {
        IMediaProtectionManager(std::nullptr_t = nullptr) noexcept {}
        IMediaProtectionManager(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaProtectionManager(IMediaProtectionManager const&) noexcept = default;
        IMediaProtectionManager(IMediaProtectionManager&&) noexcept = default;
        IMediaProtectionManager& operator=(IMediaProtectionManager const&) & noexcept = default;
        IMediaProtectionManager& operator=(IMediaProtectionManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaProtectionPMPServer :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaProtectionPMPServer>
    {
        IMediaProtectionPMPServer(std::nullptr_t = nullptr) noexcept {}
        IMediaProtectionPMPServer(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaProtectionPMPServer(IMediaProtectionPMPServer const&) noexcept = default;
        IMediaProtectionPMPServer(IMediaProtectionPMPServer&&) noexcept = default;
        IMediaProtectionPMPServer& operator=(IMediaProtectionPMPServer const&) & noexcept = default;
        IMediaProtectionPMPServer& operator=(IMediaProtectionPMPServer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaProtectionPMPServerFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaProtectionPMPServerFactory>
    {
        IMediaProtectionPMPServerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaProtectionPMPServerFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaProtectionPMPServerFactory(IMediaProtectionPMPServerFactory const&) noexcept = default;
        IMediaProtectionPMPServerFactory(IMediaProtectionPMPServerFactory&&) noexcept = default;
        IMediaProtectionPMPServerFactory& operator=(IMediaProtectionPMPServerFactory const&) & noexcept = default;
        IMediaProtectionPMPServerFactory& operator=(IMediaProtectionPMPServerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaProtectionServiceCompletion :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaProtectionServiceCompletion>
    {
        IMediaProtectionServiceCompletion(std::nullptr_t = nullptr) noexcept {}
        IMediaProtectionServiceCompletion(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaProtectionServiceCompletion(IMediaProtectionServiceCompletion const&) noexcept = default;
        IMediaProtectionServiceCompletion(IMediaProtectionServiceCompletion&&) noexcept = default;
        IMediaProtectionServiceCompletion& operator=(IMediaProtectionServiceCompletion const&) & noexcept = default;
        IMediaProtectionServiceCompletion& operator=(IMediaProtectionServiceCompletion&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaProtectionServiceRequest :
        Windows::Foundation::IInspectable,
        impl::consume_t<IMediaProtectionServiceRequest>
    {
        IMediaProtectionServiceRequest(std::nullptr_t = nullptr) noexcept {}
        IMediaProtectionServiceRequest(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaProtectionServiceRequest(IMediaProtectionServiceRequest const&) noexcept = default;
        IMediaProtectionServiceRequest(IMediaProtectionServiceRequest&&) noexcept = default;
        IMediaProtectionServiceRequest& operator=(IMediaProtectionServiceRequest const&) & noexcept = default;
        IMediaProtectionServiceRequest& operator=(IMediaProtectionServiceRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProtectionCapabilities :
        Windows::Foundation::IInspectable,
        impl::consume_t<IProtectionCapabilities>
    {
        IProtectionCapabilities(std::nullptr_t = nullptr) noexcept {}
        IProtectionCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProtectionCapabilities(IProtectionCapabilities const&) noexcept = default;
        IProtectionCapabilities(IProtectionCapabilities&&) noexcept = default;
        IProtectionCapabilities& operator=(IProtectionCapabilities const&) & noexcept = default;
        IProtectionCapabilities& operator=(IProtectionCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRevocationAndRenewalInformation :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRevocationAndRenewalInformation>
    {
        IRevocationAndRenewalInformation(std::nullptr_t = nullptr) noexcept {}
        IRevocationAndRenewalInformation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRevocationAndRenewalInformation(IRevocationAndRenewalInformation const&) noexcept = default;
        IRevocationAndRenewalInformation(IRevocationAndRenewalInformation&&) noexcept = default;
        IRevocationAndRenewalInformation& operator=(IRevocationAndRenewalInformation const&) & noexcept = default;
        IRevocationAndRenewalInformation& operator=(IRevocationAndRenewalInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRevocationAndRenewalItem :
        Windows::Foundation::IInspectable,
        impl::consume_t<IRevocationAndRenewalItem>
    {
        IRevocationAndRenewalItem(std::nullptr_t = nullptr) noexcept {}
        IRevocationAndRenewalItem(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRevocationAndRenewalItem(IRevocationAndRenewalItem const&) noexcept = default;
        IRevocationAndRenewalItem(IRevocationAndRenewalItem&&) noexcept = default;
        IRevocationAndRenewalItem& operator=(IRevocationAndRenewalItem const&) & noexcept = default;
        IRevocationAndRenewalItem& operator=(IRevocationAndRenewalItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IServiceRequestedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IServiceRequestedEventArgs>
    {
        IServiceRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IServiceRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IServiceRequestedEventArgs(IServiceRequestedEventArgs const&) noexcept = default;
        IServiceRequestedEventArgs(IServiceRequestedEventArgs&&) noexcept = default;
        IServiceRequestedEventArgs& operator=(IServiceRequestedEventArgs const&) & noexcept = default;
        IServiceRequestedEventArgs& operator=(IServiceRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IServiceRequestedEventArgs2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IServiceRequestedEventArgs2>
    {
        IServiceRequestedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IServiceRequestedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IServiceRequestedEventArgs2(IServiceRequestedEventArgs2 const&) noexcept = default;
        IServiceRequestedEventArgs2(IServiceRequestedEventArgs2&&) noexcept = default;
        IServiceRequestedEventArgs2& operator=(IServiceRequestedEventArgs2 const&) & noexcept = default;
        IServiceRequestedEventArgs2& operator=(IServiceRequestedEventArgs2&&) & noexcept = default;
    };
}
#endif
